{"version":3,"sources":["reducers/alertReducer.js","constants/indicators.js","reducers/indicatorsReducer.js","constants/statistic.js","reducers/statisticReducer.js","constants/loading.js","reducers/loadingReducer.js","constants/categories.js","reducers/categoriesReducer.js","reducers/index.js","constants/alert.js","store.js","config/server.js","actions/alertAction.js","actions/statisticAction.js","actions/indicatorsAction.js","components/MapAnimation.jsx","constants/helpers.js","components/IndicatorModal.jsx","components/Map.jsx","components/IndicatorsModal.jsx","components/MapWithBars.jsx","components/StatisticHeader.jsx","components/VirtualizedMultiSelect.jsx","components/ColorPickerButton.jsx","components/TabPanel.jsx","containers/MapTab.jsx","containers/withSettingsPanel.jsx","containers/MainTable.jsx","containers/TableTab.jsx","containers/RegionTable.jsx","containers/RegionRating.jsx","containers/IndicatorTable.jsx","components/VertualizedSelect.jsx","containers/IndicatorRating.jsx","components/LineDiagram.jsx","components/BarDiagram.jsx","components/RadarDiagram.jsx","containers/DiagramsTab.jsx","components/IndicatorSelectorCard.jsx","containers/App.jsx","actions/categoriesAction.js","containers/AlertContainer.jsx","theme/palette.js","theme/typography.js","theme/index.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiCardActions.js","theme/overrides/MuiCardContent.js","theme/overrides/MuiCardHeader.js","theme/overrides/MuiChip.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiInputBase.js","theme/overrides/MuiLinearProgress.js","theme/overrides/MuiListItem.js","theme/overrides/MuiListItemIcon.js","theme/overrides/MuiOutlinedInput.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTableRow.js","theme/overrides/MuiToggleButton.js","theme/overrides/MuiTypography.js","containers/TopAppBar.jsx","index.js"],"names":["initialState","message","type","text","setAlertOpen","indicators","statistic","mapStatistic","mapRegions","diagramStatistic","radarDiagramStatistic","years","regions","top","isLoading","categories","rootReducer","combineReducers","alert","state","action","payload","items","loading","logger","createLogger","store","createStore","applyMiddleware","thunk","config","protocol","server","port","handleError","dispatch","err","callBackIfLocalErr","console","log","require","getStatisticByIndicator","indicator","a","formattedRegions","map","region","reg_ID","fetch","id","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","response","json","error","Error","connect","setSelectedYear","year","marks","onPlayClick","onPauseClick","onStopClick","onReplayClick","el","value","Grid","container","justify","item","xs","Slider","min","max","length","onChange","e","newValue","valueLabelDisplay","randomColor","randomInt","Math","floor","random","h","s","l","addOrdinalToNumber","labelValue","abs","Number","toFixed","IndicatorModal","selectedRegion","currentIndicator","onClose","beautifulValue","replace","style","fontFamily","fontSize","lineHeight","fontStyle","fontWeight","display","justifyContent","alignItems","Region","reg_alias_human_name","IconButton","component","size","onClick","padding","maxWidth","title","width","textAlign","Divider","height","orientation","measurement_unit","memo","props","handleTooltipChange","selectedYear","isLegendIntervaled","colors","isRegionsSigned","colorsCount","mainMapColor","mapFontColor","mapBorderColor","mapFontSize","legendFontSize","isRegionNames3Letters","legendFontColor","React","useState","setSelectedRegion","coordinates","zoom","position","setPosition","anchorEl","useRef","onCloseRegionPopover","event","active","document","querySelector","classList","remove","handleClick","geo","target","add","quantize","scaleQuantize","domain","range","colorScale","scaleLinear","step","legendItems","Array","from","keys","paddingTop","paddingBottom","ref","background","right","flexDirection","values","color","listStyle","margin","marginRight","marginTop","borderRadius","index","key","invertExtent","projection","geoConicEqualArea","scale","center","parallels","rotate","translate","minZoom","maxZoom","onMoveEnd","geography","data-tip","data-for","geographies","Object","properties","rsmKey","onMouseEnter","onMouseLeave","className","default","fill","outline","stroke","strokeWidth","pressed","hover","centroid","geoCentroid","cur","x","alignmentBaseline","reg_alias_short_3letters","reg_alias_short_2letters","left","transform","ButtonGroup","variant","Button","pos","Popover","current","open","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","prevProps","nextProps","isTooltipOpen","IndicatorsModal","indicatorsStatistic","selectedIndicators","beautifulValues","Indicator","reg_alias_fias_id","val","indicatorsColors","statisticIndicators","indicatorsCount","find","parseInt","i","barScale","xPosition","y","StatisticHeader","selectedYears","renderRow","data","cloneElement","OuterElementContext","createContext","OuterElementType","forwardRef","outerProps","useContext","ListboxComponent","children","other","itemData","Children","toArray","theme","useTheme","smUp","useMediaQuery","breakpoints","up","noSsr","itemCount","itemSize","getChildSize","child","isValidElement","ListSubheader","gridRef","useEffect","resetAfterIndex","useResetCache","Provider","reduce","b","outerElementType","innerElementType","overscanCount","useStyles","makeStyles","listbox","boxSizing","VirtualizedMultiSelect","options","label","rest","classes","Autocomplete","multiple","noOptionsText","disableCloseOnSelect","renderTags","getTagProps","whiteSpace","cat","join","disableListWrap","renderInput","params","TextField","InputLabelProps","shrink","renderOption","option","selected","overflow","Checkbox","checked","textOverflow","getOptionLabel","getOptionSelected","ColorPickerButton","setState","displayColorPicker","handleClose","handleChange","hex","handleChangeComplete","handleColorChange","this","minWidth","zIndex","bottom","onChangeComplete","Component","TabPanel","Typography","role","hidden","aria-labelledby","Box","p","timeout","ms","Promise","resolve","setTimeout","getStatisticForMap","formattedIndicators","WrappedComponent","getTabProps","settingsButton","createRef","name","handleColorsCountChange","persist","test","prevState","difference","newColors","splice","handleFontSizeChange","handleColorsChange","handleLegendIntervaledChange","handleCheckboxChange","handleTabChange","currentTab","handleSelectedIndicatorsChange","handleIndicatorColorsChange","isSettingsOpened","isRegionNames2Letters","Popper","Paper","elevation","square","Tabs","indicatorColor","textColor","Tab","direction","spacing","isBar","border","FormControlLabel","control","marginLeft","fullWidth","inputProps","flexFlow","r","withSettingsPanel","setSelectedIndicators","tooltip","setTooltip","isAnimating","setIsAnimating","ProcessAnimation","currentPosition","findIndex","newPosition","MapWithBars","effect","clickable","place","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","statisticRow","setSelectedYears","selectedRegions","setSelectedRegions","setAnchorEl","FormControl","InputLabel","Select","labelId","input","Input","renderValue","reg","MenuProps","getContentAnchorEl","MenuItem","indexOf","ListItemText","primary","paddingRight","Chip","startIcon","currentTarget","Menu","keepMounted","objectData","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","createElement","download","href","encodeURIComponent","appendChild","click","removeChild","exportToJson","opts","fields","csv","Parser","parse","exportToCSV","flattenData","stat","Индикатор","Регион","Год","Значение","json2excel","formateDate","exportToXLSX","RegionTable","getStatisticForRegionTop","IndicatorTable","VirtualizedSelect","noWrap","getStatisticForIndicatorTop","selectedIndicator","setSelectedIndicator","LineDiagram","opacity","setOpacity","setColors","yKeys","filter","dataKey","strokeOpacity","activeDot","o","strokeDasharray","unit","BarDiagram","RadarDiagram","outerRadius","fillOpacity","getStatisticForDiagram","getStatisticForRadarDiagram","selectedDiagram","setSelectedDiagram","diagrams","line","bar","radar","clsx","IndicatorSelectorCard","handleSelectedCatogories","selectedCatogories","handleCurrentIndicatorChange","category","getIndicators","formattedCategories","getCategories","setCurrentTab","selectedRatingType","setSelectedRatingType","setCurrentIndicator","setSelectedCatogories","Container","LinearProgress","FormLabel","RadioGroup","aria-label","Radio","Alert","AlertContainer","bind","reason","closeAlert","Snackbar","autoHideDuration","severity","contrastText","dark","indigo","main","light","secondary","blue","A700","A400","red","blueGrey","link","icon","paper","divider","grey","h1","palette","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","baseTheme","typography","overrides","MuiButton","contained","boxShadow","backgroundColor","MuiCardActions","root","MuiCardContent","MuiCardHeader","MuiChip","deletable","MuiIconButton","MuiInputBase","MuiLinearProgress","colorPrimary","MuiListItem","MuiListItemIcon","MuiOutlinedInput","notchedOutline","borderColor","MuiPaper","elevation1","MuiTableCell","borderBottom","MuiTableHead","MuiTableRow","MuiToggleButton","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","MuiTypography","gutterBottom","marginBottom","createMuiTheme","TopAppBar","signOut","driverIsOpen","AppBar","Toolbar","Hidden","xsDown","to","white","Drawer","anchor","List","subheader","withRouter","ReactDOM","render","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.196c6019.chunk.js","sourcesContent":["import { CLOSE_ALERT, OPEN_ALERT } from '../constants/alert';\n\nconst initialState = {\n  message: {\n    type: '',\n    text: '',\n  },\n  setAlertOpen: false,\n};\n\nexport function alertReducer(state = initialState, action) {\n  switch (action.type) {\n    case CLOSE_ALERT:\n      return {\n        ...state,\n        message: {},\n        setAlertOpen: false,\n      };\n    case OPEN_ALERT:\n      return {\n        ...state,\n        setAlertOpen: true,\n        message: action.payload.message,\n      };\n    default:\n      return state;\n  }\n}\n","export const GET_INDICATORS = 'GET_INDICATORS';\n","import { GET_INDICATORS } from '../constants/indicators';\n\nconst initialState = {\n  indicators: [],\n};\n\nexport function indicatorsReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_INDICATORS:\n      return {\n        ...state,\n        indicators: action.payload.items,\n      };\n    default:\n      return state;\n  }\n}\n","export const GET_STATISTIC = 'GET_STATISTIC';\nexport const GET_DIAGRAM_STATISTIC = 'GET_DIAGRAM_STATISTIC';\nexport const GET_MAP_STATISTIC = 'GET_MAP_STATISTIC';\nexport const GET_RADAR_DIAGRAM_STATISTIC = 'GET_RADAR_DIAGRAM_STATISTIC';\nexport const GET_REGION_TOP_STATISTIC = 'GET_REGION_TOP_STATISTIC';\nexport const GET_INDICATOR_TOP_STATISTIC = 'GET_INDICATOR_TOP_STATISTIC';\n","import {\n  GET_STATISTIC,\n  GET_MAP_STATISTIC,\n  GET_DIAGRAM_STATISTIC,\n  GET_RADAR_DIAGRAM_STATISTIC,\n  GET_REGION_TOP_STATISTIC,\n  GET_INDICATOR_TOP_STATISTIC,\n} from '../constants/statistic';\n\nconst initialState = {\n  statistic: [],\n  mapStatistic: {},\n  mapRegions: {},\n  diagramStatistic: [],\n  radarDiagramStatistic: [],\n  years: [],\n  regions: [],\n  top: [],\n};\n\nexport function statisticReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_STATISTIC:\n      return {\n        ...state,\n        statistic: action.payload.items,\n        years: action.payload.years,\n        regions: action.payload.regions,\n      };\n    case GET_MAP_STATISTIC:\n      return {\n        ...state,\n        mapStatistic: action.payload.items,\n        mapRegions: action.payload.regions,\n        years: action.payload.years,\n      };\n    case GET_DIAGRAM_STATISTIC:\n      return {\n        ...state,\n        diagramStatistic: action.payload.items,\n        years: action.payload.years,\n        regions: action.payload.regions,\n      };\n    case GET_RADAR_DIAGRAM_STATISTIC:\n      return {\n        ...state,\n        radarDiagramStatistic: action.payload.items,\n        years: action.payload.years,\n        regions: action.payload.regions,\n      };\n    case GET_REGION_TOP_STATISTIC:\n      return {\n        ...state,\n        top: action.payload.items,\n      };\n    case GET_INDICATOR_TOP_STATISTIC:\n      return {\n        ...state,\n        top: action.payload.items,\n      };\n    default:\n      return state;\n  }\n}\n","export const DATA_LOADED = 'DATA_LOADED';\nexport const DATA_LOADING = 'DATA_LOADING';\n","import { DATA_LOADING, DATA_LOADED } from '../constants/loading';\n\nconst initialState = {\n  isLoading: false,\n};\n\nexport function loadingReducer(state = initialState, action) {\n  switch (action.type) {\n    case DATA_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case DATA_LOADED:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","export const GET_CATEGORIES = 'GET_CATEGORIES';\n","import { GET_CATEGORIES } from '../constants/categories';\n\nconst initialState = {\n  categories: [],\n};\n\nexport function categoriesReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_CATEGORIES:\n      return {\n        ...state,\n        categories: action.payload.items,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { alertReducer } from './alertReducer';\nimport { indicatorsReducer } from './indicatorsReducer';\nimport { statisticReducer } from './statisticReducer';\nimport { loadingReducer } from './loadingReducer';\nimport { categoriesReducer } from './categoriesReducer';\n\nconst rootReducer = combineReducers({\n  alert: alertReducer,\n  indicators: indicatorsReducer,\n  categories: categoriesReducer,\n  statistic: statisticReducer,\n  loading: loadingReducer,\n});\n\nexport default rootReducer;\n","export const CLEAR_ALERT = 'CLEAR_ALERT';\nexport const CLOSE_ALERT = 'CLOSE_ALERT';\nexport const OPEN_ALERT = 'OPEN_ALERT';\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\n\nexport default store;\n","const config = {\n  protocol: 'http',\n  server: '68.183.98.249',\n  port: '3001',\n};\n// const config = {\n//   protocol: 'http',\n//   server: '127.0.0.1',\n//   port: '5000',\n// };\nexport default config;\n","import { OPEN_ALERT, CLOSE_ALERT } from '../constants/alert';\n\nexport function handleError(dispatch, err, callBackIfLocalErr) {\n  // if (err.response.data.type === 'local') {\n  //   callBackIfLocalErr();\n  // } else {\n  //   dispatch({\n  //     type: OPEN_ALERT,\n  //     payload: { message: { text: err.response.data.text, type: 'error' } },\n  //   });\n  // }\n  console.log(err);\n  // dispatch({\n  //   type: OPEN_ALERT,\n  //   payload: { message: { text: err, type: 'error' } },\n  // });\n}\nexport function closeAlert() {\n  return dispatch => dispatch({\n    type: CLOSE_ALERT,\n  });\n}\nexport function openAlert(message) {\n  return dispatch => dispatch({\n    type: OPEN_ALERT,\n    payload: message,\n  });\n}\n","import {\n  GET_STATISTIC,\n  GET_MAP_STATISTIC,\n  GET_DIAGRAM_STATISTIC,\n  GET_REGION_TOP_STATISTIC,\n  GET_INDICATOR_TOP_STATISTIC,\n  GET_RADAR_DIAGRAM_STATISTIC,\n} from '../constants/statistic';\nimport config from '../config/server';\nimport { handleError } from './alertAction';\nimport { handleLoadingFinished, handleLoadingStarted } from './loadingAction';\n\n\nconst qs = require('qs');\n\nexport const getStatisticByIndicator = ({ indicator, years = [], regions = [] }) => async dispatch => {\n  try {\n    handleLoadingStarted();\n    // const url = new URL(\n    //   `${config.protocol}://${config.server}:${config.port}/api/statistics/indicator/${indicator.id}`,\n    // );\n    // const params = qs.stringify(\n    //   years,\n    // );\n    // url.search = params;\n\n    // const response = await fetch(url, {\n    //   method: 'get',\n    //   headers: {\n    //     Authorization: localStorage.getItem('token'),\n    //     'Content-type': 'application/json; charset=UTF-8',\n    //   },\n    // });\n    const formattedRegions = regions.map((region) => region.reg_ID);\n    const response = await fetch(\n      `${config.protocol}://${config.server}:${config.port}/api/statistics/indicator/${indicator.id}`,\n      {\n        method: 'post',\n        headers: {\n          Authorization: localStorage.getItem('token'),\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n        body: JSON.stringify({\n          years,\n          regions: formattedRegions,\n        }),\n      },\n    );\n\n    const json = await response.json();\n\n    if (json.error) {\n      throw new Error(json.message);\n    }\n\n    dispatch({\n      type: GET_STATISTIC,\n      payload: {\n        items: json.statistic,\n        years: json.years,\n        regions: json.regions,\n      },\n    });\n  } catch (err) {\n    handleError(dispatch, err);\n  } finally {\n    handleLoadingFinished();\n  }\n};\n\nexport const getStatisticForRadarDiagram = ({ indicator, years = [], regions = [] }) => async dispatch => {\n  try {\n    handleLoadingStarted();\n\n    const formattedRegions = regions.map((region) => region.reg_ID);\n    const response = await fetch(\n      `${config.protocol}://${config.server}:${config.port}/api//statistics/radar-diagram/indicator/${indicator.id}`,\n      {\n        method: 'post',\n        headers: {\n          Authorization: localStorage.getItem('token'),\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n        body: JSON.stringify({\n          years,\n          regions: formattedRegions,\n        }),\n      },\n    );\n\n    const json = await response.json();\n\n    if (json.error) {\n      throw new Error(json.message);\n    }\n\n    dispatch({\n      type: GET_RADAR_DIAGRAM_STATISTIC,\n      payload: {\n        items: json.statistic,\n        years: json.years,\n        regions: json.regions,\n      },\n    });\n  } catch (err) {\n    handleError(dispatch, err);\n  } finally {\n    handleLoadingFinished();\n  }\n};\n\nexport const getStatisticForDiagram = ({ indicator, years = [], regions = [] }) => async dispatch => {\n  try {\n    // const url = new URL(\n    //   `${config.protocol}://${config.server}:${config.port}/api/statistics/indicator/${indicator.id}`,\n    // );\n    // const params = qs.stringify(\n    //   years,\n    // );\n    // url.search = params;\n\n    // const response = await fetch(url, {\n    //   method: 'get',\n    //   headers: {\n    //     Authorization: localStorage.getItem('token'),\n    //     'Content-type': 'application/json; charset=UTF-8',\n    //   },\n    // });\n    handleLoadingStarted();\n\n    const formattedRegions = regions.map((region) => region.reg_ID);\n    const response = await fetch(\n      `${config.protocol}://${config.server}:${config.port}/api/statistics/diagram/indicator/${indicator.id}`,\n      {\n        method: 'post',\n        headers: {\n          Authorization: localStorage.getItem('token'),\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n        body: JSON.stringify({\n          years,\n          regions: formattedRegions,\n        }),\n      },\n    );\n\n    const json = await response.json();\n\n    if (json.error) {\n      throw new Error(json.message);\n    }\n\n    dispatch({\n      type: GET_DIAGRAM_STATISTIC,\n      payload: {\n        items: json.statistic,\n        years: json.years,\n        regions: json.regions,\n      },\n    });\n  } catch (err) {\n    handleError(dispatch, err);\n  } finally {\n    handleLoadingFinished();\n  }\n};\n\nexport const getStatisticForMap = (indicators) => async dispatch => {\n  try {\n    handleLoadingStarted();\n    const formattedIndicators = indicators.map((indicator) => indicator.id);\n    const response = await fetch(\n      `${config.protocol}://${config.server}:${config.port}/api/statistics/map/indicators`,\n      {\n        method: 'post',\n        headers: {\n          Authorization: localStorage.getItem('token'),\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n        body: JSON.stringify({\n          indicators: formattedIndicators,\n        }),\n      },\n    );\n\n    const json = await response.json();\n\n    if (json.error) {\n      throw new Error(json.message);\n    }\n\n    dispatch({\n      type: GET_MAP_STATISTIC,\n      payload: {\n        items: json.items,\n        regions: json.regions,\n        years: json.years,\n      },\n    });\n  } catch (err) {\n    handleError(dispatch, err);\n  } finally {\n    handleLoadingFinished();\n  }\n};\n\nexport const getStatisticForRegionTop = ({ region, year }) => async dispatch => {\n  try {\n    handleLoadingStarted();\n\n    const response = await fetch(\n      `${config.protocol}://${config.server}:${config.port}/api/statistics/top/region/${region.reg_ID}`,\n      {\n        method: 'post',\n        headers: {\n          Authorization: localStorage.getItem('token'),\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n        body: JSON.stringify({\n          year,\n        }),\n      },\n    );\n\n    const json = await response.json();\n\n    if (json.error) {\n      throw new Error(json.message);\n    }\n\n    dispatch({\n      type: GET_REGION_TOP_STATISTIC,\n      payload: {\n        items: json.statistic,\n      },\n    });\n  } catch (err) {\n    handleError(dispatch, err);\n  } finally {\n    handleLoadingFinished();\n  }\n};\n\nexport const getStatisticForIndicatorTop = ({ indicator, year }) => async dispatch => {\n  try {\n    handleLoadingStarted();\n\n    const response = await fetch(\n      `${config.protocol}://${config.server}:${config.port}/api/statistics/top/indicator/${indicator.id}`,\n      {\n        method: 'post',\n        headers: {\n          Authorization: localStorage.getItem('token'),\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n        body: JSON.stringify({\n          year,\n        }),\n      },\n    );\n\n    const json = await response.json();\n\n    if (json.error) {\n      throw new Error(json.message);\n    }\n\n    dispatch({\n      type: GET_INDICATOR_TOP_STATISTIC,\n      payload: {\n        items: json.statistic,\n      },\n    });\n  } catch (err) {\n    handleError(dispatch, err);\n  } finally {\n    handleLoadingFinished();\n  }\n};\n","import { GET_INDICATORS } from '../constants/indicators';\nimport config from '../config/server';\nimport { handleError } from './alertAction';\nimport { handleLoadingFinished, handleLoadingStarted } from './loadingAction';\n\nexport const getIndicators = (categories = []) => async dispatch => {\n  try {\n    handleLoadingStarted();\n    const formattedCategories = categories.map((category) => category.id);\n    const response = await fetch(\n      `${config.protocol}://${config.server}:${config.port}/api/indicators`,\n      {\n        method: 'post',\n        headers: {\n          Authorization: localStorage.getItem('token'),\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n        body: JSON.stringify({\n          categories: formattedCategories,\n        }),\n      },\n    );\n\n    const json = await response.json();\n\n    if (json.error) {\n      throw new Error(json.message);\n    }\n    dispatch({\n      type: GET_INDICATORS,\n      payload: {\n        items: json.items,\n      },\n    });\n    // dispatch({\n    //   type: OPEN_ALERT,\n    //   payload: {\n    //     message: { text: \"Пользователь успешно создан.\", type: \"success\" }\n    //   }\n    // });\n  } catch (err) {\n    handleError(dispatch, err);\n  } finally {\n    handleLoadingFinished();\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PlayArrowSharpIcon from '@material-ui/icons/PlayArrowSharp';\nimport PauseSharpIcon from '@material-ui/icons/PauseSharp';\nimport ReplaySharpIcon from '@material-ui/icons/ReplaySharp';\nimport StopSharpIcon from '@material-ui/icons/StopSharp';\nimport {\n  IconButton,\n  Grid,\n  Slider,\n} from '@material-ui/core';\n\n\nconst MapAnimation = ({\n  setSelectedYear,\n  years,\n  year,\n  onPlayClick,\n  onPauseClick,\n  onStopClick,\n  onReplayClick,\n}) => {\n  const marks = years.map((el) => ({ value: el }));\n  return (\n    <>\n      <Grid container justify=\"center\">\n        <Grid item xs={4}>\n          <Slider\n            min={years[0]}\n            marks={marks}\n            max={years[years.length - 1]}\n            value={year}\n            onChange={(e, newValue) => setSelectedYear(newValue)}\n            // valueLabelDisplay=\"auto\"\n            valueLabelDisplay=\"on\"\n          />\n        </Grid>\n      </Grid>\n      {/* <Grid container justify=\"center\">\n        <IconButton\n          aria-label=\"play\"\n          onClick={onPlayClick}\n        >\n          <PlayArrowSharpIcon />\n        </IconButton>\n        <IconButton\n          aria-label=\"pause\"\n          onClick={onPauseClick}\n        >\n          <PauseSharpIcon />\n        </IconButton>\n        <IconButton\n          aria-label=\"stop\"\n          onClick={onStopClick}\n        >\n          <StopSharpIcon />\n        </IconButton>\n        <IconButton\n          aria-label=\"replay\"\n          onClick={onReplayClick}\n        >\n          <ReplaySharpIcon />\n        </IconButton>\n      </Grid> */}\n    </>\n  );\n};\n\nexport default connect(\n  state => {\n    return {\n    };\n  },\n  {\n  },\n)(MapAnimation);\n","import { json2excel } from 'js2excel';\nimport { Parser } from 'json2csv';\n\nexport const randomColor = (() => {\n  const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  return () => {\n    const h = randomInt(0, 360);\n    const s = randomInt(42, 98);\n    const l = randomInt(40, 90);\n    return `hsl(${h},${s}%,${l}%)`;\n  };\n})();\n\nexport const exportToJson = (objectData) => {\n  const filename = 'export.json';\n  const contentType = 'application/json;charset=utf-8;';\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    const blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(objectData)))], { type: contentType });\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    const a = document.createElement('a');\n    a.download = filename;\n    a.href = `data:${contentType},${encodeURIComponent(JSON.stringify(objectData))}`;\n    a.target = '_blank';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n\nexport const exportToCSV = (objectData) => {\n  const fields = ['Indicator.title', 'Region.reg_alias_human_name', 'year', 'value', 'measurement_unit'];\n  const opts = { fields };\n  try {\n    const parser = new Parser(opts);\n    const csv = parser.parse(objectData);\n    const filename = 'export.csv';\n    const contentType = 'application/json;charset=utf-8;';\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      const blob = new Blob([decodeURIComponent(encodeURI(csv))], { type: contentType });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      const a = document.createElement('a');\n      a.download = filename;\n      a.href = `data:${contentType},${encodeURIComponent(csv)}`;\n      a.target = '_blank';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const exportToXLSX = (objectData) => {\n  const flattenData = objectData.map((stat) => ({\n    Индикатор: stat.Indicator.title, Регион: stat.Region.reg_alias_human_name, Год: stat.year, Значение: stat.value, 'Единицы измерения': stat.measurement_unit,\n  }));\n  try {\n    const filename = 'export';\n    const excel = json2excel({\n      data: flattenData,\n      name: filename,\n      formateDate: 'yyyy/mm/dd',\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const addOrdinalToNumber = (labelValue) => {\n  // Nine Zeroes for Trilliards\n  return Math.abs(Number(labelValue)) >= 1.0e+12\n\n    ? `${(Number(labelValue) / 1.0e+12).toFixed(2)} трлн.`\n  // Nine Zeroes for Billions\n    : Math.abs(Number(labelValue)) >= 1.0e+9\n\n      ? `${(Number(labelValue) / 1.0e+9).toFixed(2)} млрд.`\n    // Six Zeroes for Millions\n      : Math.abs(Number(labelValue)) >= 1.0e+6\n\n        ? `${(Number(labelValue) / 1.0e+6).toFixed(2)} млн.`\n      // Three Zeroes for Thousands\n        : Math.abs(Number(labelValue)) >= 1.0e+3\n\n          ? `${(Number(labelValue) / 1.0e+3).toFixed(2)} тыс.`\n\n          : Number(labelValue).toFixed(2);\n};\n","import React from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  IconButton,\n  Divider,\n} from '@material-ui/core';\n\nimport { addOrdinalToNumber } from '../constants/helpers';\n\n\nconst IndicatorModal = ({ selectedRegion, currentIndicator, onClose }) => {\n  const beautifulValue = addOrdinalToNumber(`${(selectedRegion && selectedRegion.value) || ''}`.replace(',', '.'));\n  return (\n    <div style={{ fontFamily: 'Roboto, Helvetica, Arial, sans-serif' }}>\n      <div\n        style={{\n          fontSize: '19px',\n          lineHeight: '24px',\n          fontStyle: 'normal',\n          fontWeight: 600,\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <span>{(selectedRegion && selectedRegion.Region && selectedRegion.Region.reg_alias_human_name) || ''}</span>\n        {onClose && (\n        <IconButton\n          component=\"span\"\n          size=\"small\"\n          onClick={() => {\n            if (onClose) {\n              onClose();\n            }\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n        )}\n      </div>\n      <div style={{\n        padding: '8px 0',\n        maxWidth: '600px',\n      }}\n      >\n        {(currentIndicator && currentIndicator.title) || ''}\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <div style={{\n          padding: '16px',\n          fontSize: '17px',\n          lineHeight: '28px',\n          fontStyle: 'normal',\n          fontWeight: 400,\n          width: '50%',\n          textAlign: 'center',\n        }}\n        >\n          {`За ${(selectedRegion && selectedRegion.year) || ''} год`}\n        </div>\n        <Divider style={{ height: 'auto' }} orientation=\"vertical\" />\n        <div\n          style={{\n            padding: '16px',\n            fontSize: '17px',\n            lineHeight: '28px',\n            fontStyle: 'normal',\n            fontWeight: 400,\n            width: '50%',\n            textAlign: 'center',\n          }}\n        >\n          {`${beautifulValue !== 'NaN' && selectedRegion && selectedRegion.value ? beautifulValue : 'Данных нет'}${(selectedRegion && selectedRegion.measurement_unit) || ''}`}\n        </div>\n      </div>\n      {/* <Typography>\n              {currentIndicator.description}\n            </Typography> */}\n    </div>\n  );\n};\n\nexport default IndicatorModal;\n","import React, {\n  useState, useRef, memo,\n} from 'react';\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Annotation,\n  // Sphere,\n  // Graticule,\n} from 'react-simple-maps';\nimport { geoConicEqualArea, geoCentroid } from 'd3-geo';\nimport {\n  scaleLinear, scaleQuantile, scaleQuantize,\n} from 'd3-scale';\n\nimport {\n  Popover,\n  ButtonGroup,\n  Button,\n} from '@material-ui/core';\nimport IndicatorModal from './IndicatorModal';\nimport { addOrdinalToNumber } from '../constants/helpers';\n\n\nconst mapPath = 'russiaCompressed.json';\n\nconst Map = (props) => {\n  const {\n    statistic,\n    handleTooltipChange,\n    currentIndicator,\n    regions,\n    selectedYear,\n    isLegendIntervaled,\n    colors,\n    colorsCount,\n    isRegionsSigned,\n    mainMapColor,\n    mapFontColor,\n    mapBorderColor,\n    mapFontSize,\n    legendFontSize,\n    isRegionNames3Letters,\n    legendFontColor,\n  } = props;\n\n  const [selectedRegion, setSelectedRegion] = React.useState(null);\n\n  const [position, setPosition] = useState({ coordinates: [98.11524315889842, 68.0729404428195], zoom: 1 });\n\n  const anchorEl = useRef();\n\n  const onCloseRegionPopover = (event) => {\n    const active = document.querySelector('svg .active');\n    if (active) {\n      active.classList.remove('active');\n    }\n    setSelectedRegion(null);\n  };\n\n  function handleZoomIn() {\n    if (position.zoom >= 4) return;\n    setPosition(pos => ({ ...pos, zoom: pos.zoom * 2 }));\n  }\n\n  function handleZoomOut() {\n    if (position.zoom <= 1) return;\n    setPosition(pos => ({ ...pos, zoom: pos.zoom / 2 }));\n  }\n\n  function handleMoveEnd(position) {\n    setPosition(position);\n  }\n\n  const handleClick = (statistic, geo) => (event) => {\n    const active = document.querySelector('svg .active');\n    if (active) {\n      active.classList.remove('active');\n    }\n    event.target.classList.add('active');\n    setSelectedRegion(statistic);\n  };\n\n  const projection = () => {\n    return geoConicEqualArea()\n      .scale(650)\n      .center([0, 90])\n      .parallels([40, 80])\n      .rotate([265])\n      .translate([430, 0]);\n  };\n\n  const quantize = statistic && scaleQuantize()\n    .domain([statistic.min, statistic.max])\n    .range(colors);\n\n  const colorScale = (value) => {\n    if (isLegendIntervaled) {\n      return statistic ? quantize(value) : mainMapColor;\n    }\n    return statistic ? (scaleLinear()\n      .domain([statistic.min, statistic.max])\n      .range(colors))(value) : mainMapColor;\n  };\n\n  const legendItemsCount = 5;\n\n  const step = statistic && statistic.max\n    ? Math.abs(statistic.max - statistic.min) / (legendItemsCount - 1) : 0;\n  const legendItems = statistic && statistic.max\n    ? Array.from(Array(legendItemsCount).keys(), item => (statistic.min + item * step).toFixed(2))\n    : [];\n\n  return (\n    <div\n      style={{ paddingTop: '15px', paddingBottom: '15px', position: 'relative' }}\n      ref={anchorEl}\n    >\n      <div\n        style={{\n          background: 'white',\n          position: 'absolute',\n          right: 0,\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n          }}\n        >\n          {statistic && statistic.values && statistic.values['0'] && statistic.values['0'].value\n            && (\n            <span style={\n              {\n                fontSize: `${legendFontSize}px`,\n                lineHeight: '20px',\n                fontStyle: 'normal',\n                fontWeight: 400,\n                color: legendFontColor,\n              }\n            }\n            >\n              {`Всего в РФ ${addOrdinalToNumber(`${statistic.values['0'].value}`.replace(',', '.'))} ${((statistic && statistic.values && statistic.values['0'] && statistic.values['0'].measurement_unit) || '')}`}\n            </span>\n            )}\n          <span style={\n            {\n              fontSize: `${legendFontSize}px`,\n              lineHeight: '20px',\n              fontStyle: 'normal',\n              fontWeight: 400,\n              color: legendFontColor,\n            }\n          }\n          >\n            {'Диапазоны значений'}\n          </span>\n        </div>\n        <ul style={{ listStyle: 'none' }}>\n          <li style={{ display: 'flex', alignItems: 'flex-start', margin: '8px' }}>\n            <div style={{\n              background: mainMapColor,\n              width: '18px',\n              height: '18px',\n              marginRight: '8px',\n              marginTop: '6px',\n              borderRadius: '2px',\n            }}\n            />\n            <span\n              style={{\n                fontSize: '11px',\n                lineHeight: '16px',\n                fontStyle: 'normal',\n                fontWeight: 400,\n                color: '#909ebb',\n              }}\n            />\n            <span style={\n              {\n                fontSize: `${legendFontSize}px`,\n                lineHeight: '28px',\n                fontStyle: 'normal',\n                fontWeight: 400,\n                color: legendFontColor,\n              }\n            }\n            >\n              {'Нет данных'}\n            </span>\n          </li>\n          {(isLegendIntervaled ? colors : legendItems).map((item, index) => (\n            <li key={index} style={{ display: 'flex', alignItems: 'flex-start', margin: '8px' }}>\n              <div style={{\n                background: isLegendIntervaled\n                  ? item : colorScale(`${item}`.replace(',', '.')),\n                width: '18px',\n                height: '18px',\n                marginRight: '8px',\n                marginTop: '6px',\n                borderRadius: '2px',\n              }}\n              />\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <span style={\n                {\n                  fontSize: `${legendFontSize}px`,\n                  lineHeight: '28px',\n                  fontStyle: 'normal',\n                  fontWeight: 400,\n                  color: legendFontColor,\n                }\n              }\n                >\n                  {`${\n                    (isLegendIntervaled\n                      ? (\n                        `${addOrdinalToNumber((quantize && quantize.invertExtent(`${item}`.replace(',', '.'))[0])\n                          || 0)}\n                          -\n                          ${addOrdinalToNumber((quantize && quantize.invertExtent(`${item}`.replace(',', '.'))[1])\n                          || 0)}`\n                      )\n                      : addOrdinalToNumber(`${item}`.replace(',', '.') || 0))}`}\n                </span>\n                <span\n                  style={{\n                    fontSize: '11px',\n                    lineHeight: '16px',\n                    fontStyle: 'normal',\n                    fontWeight: 400,\n                    color: '#909ebb',\n                  }}\n                >\n                  {`${((statistic && statistic.values && statistic.values[1] && statistic.values[1].measurement_unit) || '')}`}\n                </span>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <ComposableMap\n        projection={projection()}\n        width={900}\n        height={450}\n        style={{\n          width: '100%',\n          height: 'auto',\n        }}\n      >\n        <ZoomableGroup\n          minZoom={1}\n          maxZoom={4}\n          zoom={position.zoom}\n          center={position.coordinates}\n          onMoveEnd={handleMoveEnd}\n        >\n          {/* <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} /> */}\n          {/* <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} /> */}\n          <Geographies\n            geography={mapPath}\n            data-tip=\"\"\n            data-for=\"global\"\n          >\n            {({ geographies }) => (\n              <>\n                {geographies.map((geo) => {\n                  const color = statistic\n                && Object.keys(statistic.values || {}).length > 0\n                && statistic.values[geo.properties.id]\n                    ? colorScale(`${statistic.values[geo.properties.id].value}`.replace(',', '.')) : mainMapColor;\n                  return (\n                    <Geography\n                      key={geo.rsmKey}\n                      onMouseEnter={() => {\n                        if (statistic && statistic.values) {\n                          handleTooltipChange(statistic.values[geo.properties.id]\n                            || { Region: regions[geo.properties.id], year: selectedYear });\n                        }\n                      }}\n                      onMouseLeave={() => {\n                        handleTooltipChange(null);\n                      }}\n                      className=\"region\"\n                      geography={geo}\n                      style={{\n                        default: {\n                          fill: color,\n                          outline: 'none',\n                          stroke: mapBorderColor,\n                          strokeWidth: '0.5',\n                        },\n                        pressed: {\n                          fill: color,\n                          outline: 'none',\n                          stroke: mapBorderColor,\n                          strokeWidth: '0.5',\n                        },\n                        hover: {\n                          fill: color,\n                          outline: 'none',\n                          stroke: mapBorderColor,\n                          strokeWidth: '0.5',\n                        },\n                      }}\n                      onClick={\n                      handleClick((statistic && statistic.values\n                        && statistic.values[geo.properties.id]) || { Region: regions[geo.properties.id], year: selectedYear }, geo)\n                    }\n                    />\n                  );\n                })}\n                {isRegionsSigned && geographies.map((geo) => {\n                  const centroid = geoCentroid(geo);\n                  const cur = regions[geo.properties.id];\n                  return (\n                    <Marker\n                      key={`${geo.rsmKey}-name`}\n                      coordinates={centroid}\n                      onMouseEnter={() => {\n                        if (statistic && statistic.values) {\n                          handleTooltipChange(statistic.values[geo.properties.id]\n                            || { Region: regions[geo.properties.id], year: selectedYear });\n                        }\n                      }}\n                      onMouseLeave={() => {\n                        handleTooltipChange(null);\n                      }}\n                    >\n                      <text x={isRegionNames3Letters ? -12 : -8} fontSize={mapFontSize} alignmentBaseline=\"middle\" fill={mapFontColor}>\n                        {isRegionNames3Letters ? cur.reg_alias_short_3letters : cur.reg_alias_short_2letters}\n                      </text>\n                    </Marker>\n                  //                 <Annotation\n                  //                   subject={centroid}\n                  //                   key={geo.properties.id}\n                  //                       // dx={offsets[cur.id][0]}\n                  // // dy={offsets[cur.id][1]}\n                  //                 >\n                  //                   <text x={4} fontSize={8} alignmentBaseline=\"middle\">\n                  //                     {cur.reg_alias_short_3letters}\n                  //                   </text>\n                  //                 </Annotation>\n                  );\n                })}\n              </>\n            )}\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n      <div style={{\n        display: 'flex',\n        position: 'absolute',\n        top: 0,\n        left: '50%',\n        transform: 'translateX(-50%)',\n      }}\n      >\n        <ButtonGroup variant=\"contained\">\n          <Button onClick={handleZoomIn}>+</Button>\n          <Button onClick={handleZoomOut}>-</Button>\n        </ButtonGroup>\n      </div>\n      <Popover\n        anchorEl={anchorEl.current}\n        open={Boolean(selectedRegion)}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        onClose={onCloseRegionPopover}\n      >\n        <div style={{ padding: '18px 24px' }}>\n          <IndicatorModal\n            selectedRegion={selectedRegion}\n            currentIndicator={currentIndicator}\n            onClose={onCloseRegionPopover}\n          />\n        </div>\n      </Popover>\n    </div>\n  );\n};\nfunction areEqual(prevProps, nextProps) {\n  if (\n    prevProps.isTooltipOpen !== nextProps.isTooltipOpen\n    || prevProps.statistic !== nextProps.statistic\n    || prevProps.isLegendIntervaled !== nextProps.isLegendIntervaled\n    || prevProps.colors !== nextProps.colors\n    || prevProps.isRegionsSigned !== nextProps.isRegionsSigned\n    || prevProps.mainMapColor !== nextProps.mainMapColor\n    || prevProps.mapFontColor !== nextProps.mapFontColor\n    || prevProps.mapBorderColor !== nextProps.mapBorderColor\n    || prevProps.mapFontSize !== nextProps.mapFontSize\n    || prevProps.legendFontSize !== nextProps.legendFontSize\n    || prevProps.isRegionNames3Letters !== nextProps.isRegionNames3Letters\n    || prevProps.legendFontColor !== nextProps.legendFontColor\n  ) return false;\n  return true;\n}\nexport default memo(Map, areEqual);\n","import React from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  IconButton,\n  Divider,\n} from '@material-ui/core';\nimport { addOrdinalToNumber } from '../constants/helpers';\n\nconst IndicatorsModal = ({\n  indicatorsStatistic, selectedIndicators, selectedRegion, selectedYear, onClose,\n}) => {\n  const beautifulValues = selectedIndicators ? selectedIndicators.map((indicator) => {\n    return {\n      Indicator: indicator,\n      value: addOrdinalToNumber(`${(indicatorsStatistic\n        && selectedRegion\n        && indicatorsStatistic[indicator.id]\n        && indicatorsStatistic[indicator.id].values\n        && indicatorsStatistic[indicator.id].values[selectedRegion.reg_alias_fias_id]\n        && indicatorsStatistic[indicator.id].values[selectedRegion.reg_alias_fias_id].value) || ''}`\n        .replace(',', '.')),\n      measurement_unit: indicatorsStatistic\n      && selectedRegion\n      && indicatorsStatistic[indicator.id]\n      && indicatorsStatistic[indicator.id].values\n      && indicatorsStatistic[indicator.id].values[selectedRegion.reg_alias_fias_id]\n      && indicatorsStatistic[indicator.id].values[selectedRegion.reg_alias_fias_id].measurement_unit,\n    };\n  }) : [];\n\n  const stat = selectedIndicators\n  && selectedIndicators.length > 0\n  && indicatorsStatistic\n  && selectedRegion\n  && indicatorsStatistic[selectedIndicators[0].id]\n  && indicatorsStatistic[selectedIndicators[0].id].values\n  && indicatorsStatistic[selectedIndicators[0].id].values[selectedRegion.reg_alias_fias_id];\n\n\n  return (\n    <div style={{ fontFamily: 'Roboto, Helvetica, Arial, sans-serif' }}>\n      <div\n        style={{\n          fontSize: '19px',\n          lineHeight: '24px',\n          fontStyle: 'normal',\n          fontWeight: 600,\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <span>{(selectedRegion && selectedRegion.reg_alias_human_name) || ''}</span>\n        {onClose && (\n        <IconButton\n          component=\"span\"\n          size=\"small\"\n          onClick={() => {\n            if (onClose) {\n              onClose();\n            }\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n        )}\n      </div>\n      {\n        beautifulValues && beautifulValues.length > 0\n        && (\n        <div style={{\n          padding: '8px 0',\n        }}\n        >\n          {`За ${(selectedYear) || ''} год`}\n        </div>\n        )\n      }\n      <>\n        {\n        beautifulValues.map((val) => (\n          <>\n            <Divider style={{ width: 'auto' }} />\n            <div key={val.Indicator.id} style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <div style={{\n                padding: '16px',\n                fontSize: '17px',\n                lineHeight: '28px',\n                fontStyle: 'normal',\n                fontWeight: 400,\n                width: '50%',\n                textAlign: 'center',\n              }}\n              >\n                {`${(val.Indicator && val.Indicator.title) || ''}`}\n              </div>\n              <Divider style={{ height: 'auto' }} orientation=\"vertical\" />\n              <div\n                style={{\n                  padding: '16px',\n                  fontSize: '17px',\n                  lineHeight: '28px',\n                  fontStyle: 'normal',\n                  fontWeight: 400,\n                  width: '50%',\n                  textAlign: 'center',\n                  justifyContent: 'center',\n                  display: 'flex',\n                }}\n              >\n                {`${val.value !== 'NaN' ? val.value : 'Данных нет'}${(val && val.measurement_unit) || ''}`}\n              </div>\n            </div>\n          </>\n        ))\n      }\n      </>\n      {/* <Typography>\n        {selectedIndicators.description}\n      </Typography> */}\n    </div>\n  );\n};\n\nexport default IndicatorsModal;\n","import React, {\n  useState, useRef, memo,\n} from 'react';\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Annotation,\n  Sphere,\n  Graticule,\n} from 'react-simple-maps';\nimport { geoConicEqualArea, geoCentroid } from 'd3-geo';\nimport { scaleLinear, scaleQuantile, scaleQuantize } from 'd3-scale';\nimport {\n  Popover,\n  ButtonGroup,\n  Button,\n} from '@material-ui/core';\nimport IndicatorsModal from './IndicatorsModal';\n\nconst mapPath = 'russiaCompressed.json';\n\nconst Map = (props) => {\n  const {\n    statistic,\n    handleTooltipChange,\n    selectedIndicators,\n    regions,\n    selectedYear,\n    indicatorsColors,\n    mainMapColor,\n    mapBorderColor,\n    legendFontSize,\n    legendFontColor,\n  } = props;\n\n  const [selectedRegion, setSelectedRegion] = useState(null);\n\n  const [position, setPosition] = useState({ coordinates: [98.11524315889842, 68.0729404428195], zoom: 1 });\n\n  const anchorEl = useRef();\n\n  const onCloseRegionPopover = (event) => {\n    const active = document.querySelector('svg .active');\n    if (active) {\n      active.classList.remove('active');\n    }\n    setSelectedRegion(null);\n  };\n\n\n  function handleZoomIn() {\n    if (position.zoom >= 4) return;\n    setPosition(pos => ({ ...pos, zoom: pos.zoom * 2 }));\n  }\n\n  function handleZoomOut() {\n    if (position.zoom <= 1) return;\n    setPosition(pos => ({ ...pos, zoom: pos.zoom / 2 }));\n  }\n\n  function handleMoveEnd(position) {\n    setPosition(position);\n  }\n\n\n  const handleClick = (geo) => (event) => {\n    const active = document.querySelector('svg .active');\n    if (active) {\n      active.classList.remove('active');\n    }\n    event.target.classList.add('active');\n    setSelectedRegion(regions[geo.properties.id]);\n  };\n\n  const projection = () => {\n    return geoConicEqualArea()\n      .scale(650)\n      .parallels([40, 80])\n      .center([0, 90])\n      .rotate([265])\n      .translate([430, 0]);\n  };\n\n  // const colorScale = (value) => {\n  //   return statistic ? (scaleLinear()\n  //     .domain([statistic.min, statistic.max])\n  //     .range(['#ffedea', '#ff5233']))(value) : '#F5F4F6';\n  // };\n\n  const barScale = (value, { min, max }) => {\n    return statistic ? (scaleLinear()\n      .domain([min, max])\n      .range([0, 40]))(value) : 0;\n  };\n\n  const statisticIndicators = Object.keys(statistic);\n  const indicatorsCount = statisticIndicators.length;\n  const barWidth = 4;\n  const barOffset = 2;\n\n  return (\n    <div\n      style={{ paddingTop: '15px', paddingBottom: '15px', position: 'relative' }}\n      ref={anchorEl}\n    >\n      <div\n        style={{\n          background: 'white',\n          position: 'absolute',\n          right: 0,\n          maxWidth: '400px',\n        }}\n      >\n        <span style={\n          {\n            fontSize: `${legendFontSize}px`,\n            lineHeight: '20px',\n            fontStyle: 'normal',\n            fontWeight: 400,\n            color: legendFontColor,\n          }\n        }\n        >\n          {'Индикаторы'}\n        </span>\n        <ul style={{ listStyle: 'none' }}>\n          {statisticIndicators.map((item, index) => {\n            return (\n              <li key={index} style={{ display: 'flex', alignItems: 'flex-start', margin: '8px' }}>\n                <div style={{\n                  background: indicatorsColors[item], width: '18px', height: '18px', marginRight: '8px', marginTop: '6px', borderRadius: '2px',\n                }}\n                />\n                <span style={\n                {\n                  fontSize: `${legendFontSize}px`,\n                  lineHeight: '28px',\n                  fontStyle: 'normal',\n                  fontWeight: 400,\n                  color: legendFontColor,\n                }\n              }\n                >\n                  {`${{ ...selectedIndicators.find((el) => parseInt(el.id) === parseInt(item)) || {} }.title || ''}`}\n                </span>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <ComposableMap\n        projection={projection()}\n        width={900}\n        height={450}\n        style={{\n          width: '100%',\n          height: 'auto',\n        }}\n      >\n        <ZoomableGroup\n          minZoom={1}\n          maxZoom={4}\n          zoom={position.zoom}\n          center={position.coordinates}\n          onMoveEnd={handleMoveEnd}\n        >\n          <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\n          <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\n          <Geographies\n            geography={mapPath}\n            data-tip=\"\"\n            data-for=\"global\"\n          >\n            {({ geographies }) => (\n              <>\n                {geographies.map((geo, i) => {\n                  return (\n                    <Geography\n                      key={geo.rsmKey}\n                      onMouseEnter={() => {\n                        handleTooltipChange({\n                          selectedRegion: selectedRegion || regions[geo.properties.id],\n                          indicatorsStatistic: statistic,\n                          selectedIndicators,\n                          selectedYear,\n                        });\n                      }}\n                      onMouseLeave={() => {\n                        handleTooltipChange(null);\n                      }}\n                      className=\"region\"\n                      geography={geo}\n                      style={{\n                        default: {\n                          fill: mainMapColor,\n                          outline: 'none',\n                          stroke: mapBorderColor,\n                          strokeWidth: '0.5',\n                        },\n                        pressed: {\n                          fill: mainMapColor,\n                          outline: 'none',\n                          stroke: mapBorderColor,\n                          strokeWidth: '0.5',\n                        },\n                        hover: {\n                          fill: mainMapColor,\n                          outline: 'none',\n                          stroke: mapBorderColor,\n                          strokeWidth: '0.5',\n                        },\n                      }}\n                      onClick={\n                        handleClick(geo)\n                      }\n                    />\n                  );\n                })}\n                { selectedIndicators && selectedIndicators.length > 0 && geographies.map(geo => {\n                  const centroid = geoCentroid(geo);\n                  const cur = regions[geo.properties.id];\n                  return (\n                    <g key={`${geo.rsmKey}-name`}>\n                      {cur\n                      && centroid[0] > 30\n                      && centroid[0] < 200\n                      && statisticIndicators\n                      && (statisticIndicators.map((indicator, i) => {\n                        const height = indicatorsCount > 0\n                          && statistic[indicator].values[geo.properties.id]\n                          ? barScale(statistic[indicator].values[geo.properties.id].value, statistic[indicator]) : 0;\n                        const xPosition = -(indicatorsCount * (barWidth + barOffset)) + (i + 1) * (barWidth + barOffset);\n                        return (\n                          <Marker\n                            key={`${geo.rsmKey}-bar-${indicator}`}\n                            coordinates={centroid}\n                            onMouseEnter={() => {\n                              handleTooltipChange({\n                                selectedRegion: selectedRegion || regions[geo.properties.id],\n                                indicatorsStatistic: statistic,\n                                selectedIndicators,\n                                selectedYear,\n                              });\n                            }}\n                            onMouseLeave={() => {\n                              handleTooltipChange(null);\n                            }}\n                          >\n                            <rect\n                              x={xPosition}\n                              y={-height}\n                              width={barWidth}\n                              height={height}\n                              fill={indicatorsColors[indicator] || '#FFF'}\n                            />\n                          </Marker>\n                        );\n                        // <Annotation\n                        //   subject={centroid}\n                        //   // dx={offsets[cur.id][0]}\n                        //   // dy={offsets[cur.id][1]}\n                        // >\n                        //   <text x={4} fontSize={8} alignmentBaseline=\"middle\">\n                        //     {cur.reg_alias_short_3letters}\n                        //   </text>\n                        // </Annotation>\n                      }))}\n                    </g>\n                  );\n                })}\n              </>\n            )}\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n      <div style={{\n        display: 'flex',\n        position: 'absolute',\n        top: 0,\n        left: '50%',\n        transform: 'translateX(-50%)',\n      }}\n      >\n        <ButtonGroup variant=\"contained\">\n          <Button onClick={handleZoomIn}>+</Button>\n          <Button onClick={handleZoomOut}>-</Button>\n        </ButtonGroup>\n      </div>\n      <Popover\n        anchorEl={anchorEl.current}\n        open={Boolean(selectedRegion)}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        onClose={onCloseRegionPopover}\n      >\n        <div style={{ padding: '18px 24px' }}>\n          <IndicatorsModal\n            selectedRegion={selectedRegion}\n            indicatorsStatistic={statistic}\n            selectedIndicators={selectedIndicators}\n            selectedYear={selectedYear}\n            onClose={onCloseRegionPopover}\n          />\n        </div>\n      </Popover>\n    </div>\n  );\n};\nfunction areEqual(prevProps, nextProps) {\n  if (\n    prevProps.isTooltipOpen !== nextProps.isTooltipOpen\n    || prevProps.statistic !== nextProps.statistic\n    || prevProps.isRegionsSigned !== nextProps.isRegionsSigned\n    || prevProps.mainMapColor !== nextProps.mainMapColor\n    || prevProps.mapFontColor !== nextProps.mapFontColor\n    || prevProps.mapBorderColor !== nextProps.mapBorderColor\n    || prevProps.mapFontSize !== nextProps.mapFontSize\n    || prevProps.legendFontSize !== nextProps.legendFontSize\n    || prevProps.isRegionNames3Letters !== nextProps.isRegionNames3Letters\n    || prevProps.indicatorsColors !== nextProps.indicatorsColors\n    || prevProps.legendFontColor !== nextProps.legendFontColor\n  ) return false;\n  return true;\n}\nexport default memo(Map, areEqual);\n","import React from 'react';\n\nconst StatisticHeader = ({ currentIndicator, selectedYears }) => {\n  return (\n    <div style={{ paddingTop: '16px' }}>\n      <div\n        style={{\n          fontSize: '24px',\n          lineHeight: '32px',\n          fontWeight: 400,\n        }}\n      >\n        {(currentIndicator && currentIndicator.title) || ''}\n      </div>\n      {selectedYears && selectedYears.length > 0 && (\n        <div\n          style={{\n            fontSize: '24px',\n            lineHeight: '32px',\n            fontWeight: 400,\n          }}\n        >\n          {`${Math.min(...selectedYears)}-${Math.max(...selectedYears)}`}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StatisticHeader;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { VariableSizeList } from 'react-window';\nimport { Typography, Checkbox } from '@material-ui/core';\n\nconst LISTBOX_PADDING = 8;\n\nfunction renderRow(props) {\n  const { data, index, style } = props;\n  return React.cloneElement(data[index], {\n    style: {\n      ...style,\n      top: style.top + LISTBOX_PADDING,\n    },\n  });\n}\n\nconst OuterElementContext = React.createContext({});\n\nconst OuterElementType = React.forwardRef((props, ref) => {\n  const outerProps = React.useContext(OuterElementContext);\n  return <div ref={ref} {...props} {...outerProps} />;\n});\n\nfunction useResetCache(data) {\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    if (ref.current != null) {\n      ref.current.resetAfterIndex(0, true);\n    }\n  }, [data]);\n  return ref;\n}\n\n// Adapter for react-window\nconst ListboxComponent = React.forwardRef((props, ref) => {\n  const { children, ...other } = props;\n  const itemData = React.Children.toArray(children);\n  const theme = useTheme();\n  const smUp = useMediaQuery(theme.breakpoints.up('sm'), { noSsr: true });\n  const itemCount = itemData.length;\n  const itemSize = smUp ? 36 : 48;\n\n  const getChildSize = (child) => {\n    if (React.isValidElement(child) && child.type === ListSubheader) {\n      return 48;\n    }\n\n    return itemSize;\n  };\n\n  const getHeight = () => {\n    if (itemCount > 8) {\n      return 8 * itemSize;\n    }\n    return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\n  };\n\n  const gridRef = useResetCache(itemCount);\n\n  return (\n    <div ref={ref}>\n      <OuterElementContext.Provider value={other}>\n        <VariableSizeList\n          itemData={itemData}\n          height={getHeight() + 2 * LISTBOX_PADDING}\n          width=\"100%\"\n          ref={gridRef}\n          outerElementType={OuterElementType}\n          innerElementType=\"ul\"\n          itemSize={(index) => getChildSize(itemData[index])}\n          overscanCount={5}\n          itemCount={itemCount}\n        >\n          {renderRow}\n        </VariableSizeList>\n      </OuterElementContext.Provider>\n    </div>\n  );\n});\n\nconst useStyles = makeStyles({\n  listbox: {\n    boxSizing: 'border-box',\n    '& ul': {\n      padding: 0,\n      margin: 0,\n    },\n  },\n});\n\nexport default function VirtualizedMultiSelect({ options, label, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Autocomplete\n      multiple\n      noOptionsText=\"Не найдено\"\n      disableCloseOnSelect\n            // renderTags={() => {}}\n      renderTags={(value, getTagProps) => (\n        <div>\n          <span style={{ whiteSpace: 'pre-line' }}>\n            {`${value.map((cat) => cat.title).join('\\n')}`}\n          </span>\n        </div>\n      )}\n      // renderTags={(value, getTagProps) => (\n      //   <div className=\"chips\">\n      //     {value.map((category) => (\n      //       <Chip key={category.id} label={category.title} className=\"chips\" />\n      //     ))}\n      //   </div>\n      // )}\n      disableListWrap\n      classes={classes}\n      ListboxComponent={ListboxComponent}\n      options={options}\n      renderInput={(params) => <TextField {...params} InputLabelProps={{ shrink: true }} label={label} />}\n      renderOption={(option, { selected }) => (\n        <div style={{\n          whiteSpace: 'nowrap', overflow: 'hidden', display: 'flex', alignItems: 'center',\n        }}\n        >\n          <Checkbox\n            style={{ marginRight: 8 }}\n            checked={selected}\n          />\n          <div style={{ textOverflow: 'ellipsis' }}>\n            {option.title}\n          </div>\n        </div>\n      )}\n      getOptionLabel={(option) => {\n        return option.title || '';\n      }}\n      getOptionSelected={(option, value) => value.id === option.id}\n      {...rest}\n    />\n  );\n}\n","\nimport React from 'react';\nimport { ChromePicker } from 'react-color';\nimport {\n  Button,\n} from '@material-ui/core';\n\nclass ColorPickerButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayColorPicker: false,\n      color: props.color,\n    };\n  }\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false });\n  };\n\n  handleChange = (color) => {\n    this.setState({ color: color.hex });\n  };\n\n  handleChangeComplete= (color) => {\n    this.props.handleColorChange(color.hex);\n  }\n\n  render() {\n    const popover = {\n      position: 'absolute',\n      zIndex: '2',\n    };\n    const cover = {\n      position: 'fixed',\n      top: '0px',\n      right: '0px',\n      bottom: '0px',\n      left: '0px',\n    };\n    return (\n      <div>\n        <Button\n          style={{\n            width: '24px',\n            height: '24px',\n            background: this.state.color,\n            margin: '4px',\n            padding: '0',\n            minWidth: '0',\n          }}\n          variant=\"outlined\"\n          onClick={this.handleClick}\n        >\n          {''}\n        </Button>\n        { this.state.displayColorPicker ? (\n          <div style={popover}>\n            <div style={cover} onClick={this.handleClose} />\n            <ChromePicker\n              color={this.state.color}\n              onChangeComplete={this.handleChangeComplete}\n              onChange={this.handleChange}\n            />\n          </div>\n        ) : null }\n      </div>\n    );\n  }\n}\n\nexport default ColorPickerButton;\n","import React from 'react';\n\nimport {\n  Typography,\n  Box,\n} from '@material-ui/core';\n\nconst TabPanel = (props) => {\n  const {\n    children, value, index, ...other\n  } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`tabpanel-${index}`}\n      aria-labelledby={`tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n};\n\nexport default TabPanel;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Divider,\n  InputLabel,\n  FormControl,\n  Select,\n  Chip,\n  TextField,\n  Checkbox,\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport ReactTooltip from 'react-tooltip';\nimport MapAnimation from '../components/MapAnimation';\nimport Map from '../components/Map';\nimport MapWithBars from '../components/MapWithBars';\nimport IndicatorModal from '../components/IndicatorModal';\nimport IndicatorsModal from '../components/IndicatorsModal';\nimport StatisticHeader from '../components/StatisticHeader';\nimport VirtualizedMultiSelect from '../components/VirtualizedMultiSelect';\nimport { getStatisticByIndicator, getStatisticForMap } from '../actions/statisticAction';\n\nimport { withSettingsPanel } from './withSettingsPanel';\n\nfunction timeout(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst MapTab = ({\n  currentIndicator,\n  getStatisticForMap,\n  mapStatistic,\n  mapRegions,\n  years,\n  indicators,\n  isBar,\n  colors,\n  colorsCount,\n  isLegendIntervaled,\n  isRegionsSigned,\n  handleSelectedIndicatorsChange,\n  mainMapColor,\n  mapFontColor,\n  mapBorderColor,\n  mapFontSize,\n  legendFontSize,\n  legendFontColor,\n  isRegionNames3Letters,\n  indicatorsColors,\n}) => {\n  const [selectedIndicators, setSelectedIndicators] = React.useState([]);\n  const [selectedYear, setSelectedYear] = React.useState(0);\n\n  const [tooltip, setTooltip] = useState(null);\n\n  const [isAnimating, setIsAnimating] = useState(false);\n\n  useEffect(() => {\n    if (years && years.length > 0) {\n      setSelectedYear(years[0]);\n    }\n  }, [years]);\n\n  useEffect(() => {\n    if (currentIndicator && currentIndicator.id) {\n      getStatisticForMap([currentIndicator]);\n    }\n  }, [currentIndicator]);\n\n  useEffect(() => {\n    if (selectedIndicators && selectedIndicators.length > 0) {\n      getStatisticForMap(selectedIndicators);\n      handleSelectedIndicatorsChange(selectedIndicators);\n    }\n  }, [selectedIndicators]);\n\n  const ProcessAnimation = async () => {\n    const currentPosition = years.findIndex((year) => year === selectedYear);\n    const newPosition = currentPosition + 1;\n    if (newPosition >= years.length) {\n      setIsAnimating(false);\n      return;\n    }\n    setSelectedYear(years[newPosition]);\n    await timeout(500);\n    if (isAnimating) ProcessAnimation();\n  };\n\n  useEffect(() => {\n    if (isAnimating) {\n      ProcessAnimation();\n    }\n  }, [isAnimating]);\n\n  const handleSelectedIndicators = (event, newValue) => {\n    setSelectedIndicators(newValue);\n    handleSelectedIndicatorsChange(newValue);\n  };\n  const onPlayClick = () => {\n    setIsAnimating(true);\n  };\n\n  const onPauseClick = () => {\n    setIsAnimating(false);\n  };\n\n  const onStopClick = () => {\n    setIsAnimating(false);\n    setSelectedYear(years[0]);\n  };\n\n  const onReplayClick = () => {\n    setSelectedYear(years[0]);\n    setIsAnimating(true);\n  };\n\n  return (\n    <>\n      {/* <Grid container spacing={3}>\n        <Grid item xs={3}>\n          <FormControl fullWidth>\n            <InputLabel shrink id=\"grouped-select-label\">\n              Год\n            </InputLabel>\n            <Select\n              labelId=\"grouped-select-label\"\n              id=\"grouped-select\"\n              value={selectedYear || ''}\n              onChange={handleYearChange}\n            >\n              {years?.map((year) => (\n                <MenuItem key={year} value={year}>{year}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid> */}\n      {\n        isBar && (\n          <VirtualizedMultiSelect\n            style={{\n              paddingBottom: '16px',\n            }}\n            id=\"grouped-select\"\n            label=\"Индикаторы\"\n            options={indicators}\n            onChange={handleSelectedIndicators}\n            value={selectedIndicators}\n          />\n        )\n      }\n      {!isBar && (<StatisticHeader currentIndicator={currentIndicator} />)}\n      {\n        !isBar ? (\n          <Map\n            statistic={mapStatistic\n              && selectedYear\n              && mapStatistic[selectedYear] && currentIndicator && currentIndicator.id\n              ? mapStatistic[selectedYear][currentIndicator.id] : []}\n            regions={mapRegions}\n            selectedYear={selectedYear}\n            handleTooltipChange={setTooltip}\n            currentIndicator={currentIndicator || {}}\n            isLegendIntervaled={isLegendIntervaled}\n            colors={colors}\n            colorsCount={colorsCount}\n            isRegionsSigned={isRegionsSigned}\n            mainMapColor={mainMapColor}\n            mapFontColor={mapFontColor}\n            mapBorderColor={mapBorderColor}\n            mapFontSize={mapFontSize}\n            legendFontSize={legendFontSize}\n            isRegionNames3Letters={isRegionNames3Letters}\n            legendFontColor={legendFontColor}\n          />\n        ) : (\n          <MapWithBars\n            statistic={mapStatistic && selectedYear && mapStatistic[selectedYear]\n              ? mapStatistic[selectedYear] : []}\n            regions={mapRegions}\n            selectedYear={selectedYear}\n            handleTooltipChange={setTooltip}\n            selectedIndicators={selectedIndicators}\n            indicatorsColors={indicatorsColors}\n            mainMapColor={mainMapColor}\n            mapBorderColor={mapBorderColor}\n            mapFontSize={mapFontSize}\n            legendFontSize={legendFontSize}\n            legendFontColor={legendFontColor}\n          />\n        )\n      }\n\n      <MapAnimation\n        setSelectedYear={setSelectedYear}\n        years={years}\n        year={selectedYear}\n        onPlayClick={onPlayClick}\n        onPauseClick={onPauseClick}\n        onStopClick={onStopClick}\n        onReplayClick={onReplayClick}\n      />\n      <Divider />\n      <ReactTooltip\n        id=\"global\"\n      // effect={isTooltipOpen ? 'solid' : 'float'}\n        effect=\"float\"\n        // globalEventOff=\"click\"\n        // style={{\n        //   pointerEvents: 'auto',\n        // }}\n        clickable\n        // delayUpdate={500}\n        place={'top'}\n        type={'light'}\n        // afterShow={() => {\n        //   setIsTooltipOpen(true);\n        // }}\n        // afterHide={() => setIsTooltipOpen(false)}\n      >\n        {tooltip\n        && !isBar ? (\n          <IndicatorModal selectedRegion={tooltip} currentIndicator={currentIndicator} />\n          )\n          : (<IndicatorsModal {...tooltip} />)}\n      </ReactTooltip>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => {\n    return {\n      mapStatistic: state.statistic.mapStatistic,\n      mapRegions: state.statistic.mapRegions,\n    };\n  },\n  {\n    getStatisticByIndicator,\n    getStatisticForMap,\n  },\n)(withSettingsPanel(MapTab));\n","\nimport React, { createRef } from 'react';\nimport {\n  TextField,\n  Checkbox,\n  Grid,\n  Paper,\n  Button,\n  Tabs,\n  Tab,\n  Popper,\n  IconButton,\n  FormControlLabel,\n} from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { randomColor } from '../constants/helpers';\nimport ColorPickerButton from '../components/ColorPickerButton';\nimport TabPanel from '../components/TabPanel';\n\n\nexport function withSettingsPanel(WrappedComponent) {\n  function getTabProps(index) {\n    return {\n      id: `tab-${index}`,\n      'aria-controls': `tabpanel-${index}`,\n      style: { width: '141px', minWidth: '141px' },\n      value: index,\n    };\n  }\n  return class SettingsPanel extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        selectedIndicators: [],\n        currentTab: 'map',\n        colorsCount: 2,\n        // colors: new Array(2).fill('#F5F4F6'),\n        colors: ['#ffedea', '#ff5233'],\n        isRegionsSigned: false,\n        isLegendIntervaled: false,\n        isSettingsOpened: false,\n        legendFontColor: '#000',\n        mainMapColor: '#F5F4F6',\n        mapFontColor: '#000',\n        mapBorderColor: '#FFF',\n        mapFontSize: 8,\n        legendFontSize: 17,\n        isRegionNames2Letters: false,\n        indicatorsColors: [],\n      };\n    }\n\n    settingsButton = createRef();\n\n    handleChange = (e) => {\n      this.setState({ [e.target.name]: e.target.value });\n    };\n\n    handleColorsCountChange = (e) => {\n      e.persist();\n      let newValue = e.target.value;\n      if (!/^\\d+$/.test(`${newValue}`)) return;\n      if (newValue >= 10)newValue = 10;\n      if (newValue <= 0)newValue = 0;\n      this.setState(prevState => {\n        const difference = prevState.colors.length - (newValue || 0);\n        const newColors = difference > 0\n          ? [...prevState.colors.splice(0, newValue)]\n          : [...prevState.colors, ...new Array(Math.abs(difference)).fill(prevState.mainMapColor)];\n        return ({\n          ...prevState,\n          colorsCount: newValue,\n          colors: newColors,\n        });\n      });\n    };\n\n    handleFontSizeChange =(name) => (e) => {\n      e.persist();\n      let newValue = e.target.value;\n      if (!/^\\d+$/.test(`${newValue}`)) return;\n      if (newValue >= 30)newValue = 30;\n      if (newValue <= 0)newValue = 0;\n      this.setState({ [name]: newValue });\n    };\n\n    handleColorsChange =(index) => (color) => {\n      const { colors } = this.state;\n      const newColors = [...colors];\n      newColors[index] = color;\n      this.setState({\n        colors: newColors,\n      });\n    };\n\n    handleColorChange= (name) => (color) => {\n      this.setState({\n        [name]: color,\n      });\n    };\n\n    handleLegendIntervaledChange = (e) => {\n      e.persist();\n      this.setState(prevState => {\n        if (!e.target.checked) {\n          return {\n            ...prevState,\n            colors: [...prevState.colors.splice(0, 2)],\n            colorsCount: 2,\n            isLegendIntervaled: e.target.checked,\n          };\n        }\n        return { isLegendIntervaled: e.target.checked };\n      });\n    };\n\n    handleCheckboxChange = (e) => {\n      this.setState({ [e.target.name]: e.target.checked });\n    };\n\n    handleTabChange = (event, newValue) => {\n      this.setState({ currentTab: newValue });\n    };\n\n    handleSelectedIndicatorsChange = (newValue) => {\n      this.setState(prevState => {\n        const difference = prevState.selectedIndicators.length - (newValue.length || 0);\n        const newColors = difference > 0\n          ? [...prevState.indicatorsColors.splice(0, newValue.length)]\n          : [...prevState.indicatorsColors, ...new Array(Math.abs(difference)).fill(randomColor())];\n        return ({ ...prevState, selectedIndicators: newValue, indicatorsColors: newColors });\n      });\n    };\n\n    handleIndicatorColorsChange =(index) => (color) => {\n      const { indicatorsColors } = this.state;\n      const newColors = [...indicatorsColors];\n      newColors[index] = color;\n      this.setState({\n        indicatorsColors: newColors,\n      });\n    };\n\n    render() {\n      const {\n        colorsCount,\n        colors,\n        isRegionsSigned,\n        isLegendIntervaled,\n        isSettingsOpened,\n        legendFontColor,\n        mapBorderColor,\n        selectedIndicators,\n        currentTab,\n        mainMapColor,\n        mapFontColor,\n        mapFontSize,\n        legendFontSize,\n        isRegionNames2Letters,\n        indicatorsColors,\n      } = this.state;\n      return (\n        <div style={{ position: 'relative' }}>\n          <IconButton\n            onClick={() => {\n              this.setState(prevState => ({ isSettingsOpened: !prevState.isSettingsOpened }));\n            }}\n            ref={this.settingsButton}\n            style={{\n              position: 'absolute',\n              // left: '10%',\n              bottom: '607px',\n              zIndex: '1',\n            }}\n          >\n            <SettingsIcon />\n          </IconButton>\n          <Popper open={isSettingsOpened} anchorEl={this.settingsButton.current}>\n            <Paper\n              elevation={3}\n              square\n            >\n              <Tabs\n                value={currentTab}\n                onChange={this.handleTabChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                // variant=\"fullWidth\"\n              >\n                <Tab label=\"Карта\" {...getTabProps('map')} />\n                <Tab label=\"Легенда\" {...getTabProps('legend')} />\n              </Tabs>\n              <>\n                <TabPanel value={currentTab} index=\"map\">\n                  <Grid container direction=\"column\" spacing={1}>\n                    <Grid\n                      item\n                      style={{\n                        display: 'flex',\n                        flexDirection: 'row',\n                        alignItems: 'center',\n                        justifyContent: 'start',\n                      }}\n                    >\n                      <ColorPickerButton\n                        color={mainMapColor}\n                        handleColorChange={this.handleColorChange('mainMapColor')}\n                      />\n                      <span>\n                        Основной цвет карты\n                      </span>\n                    </Grid>\n                    {!this.props.isBar\n                      ? (\n                        <>\n                          <Grid item>\n                            <FormControlLabel\n                              control={(\n                                <Checkbox\n                                  style={{ marginLeft: '4px' }}\n                                  checked={isLegendIntervaled}\n                                  name=\"isLegendIntervaled\"\n                                  onChange={this.handleLegendIntervaledChange}\n                                />\n                            )}\n                              label=\"Разделить на интервалы\"\n                            />\n                          </Grid>\n                          {isLegendIntervaled && (\n                          <Grid item>\n                            <TextField\n                              fullWidth\n                              label=\"Количество цветов карты\"\n                              inputProps={{ min: 1, max: 10 }}\n                              type=\"number\"\n                              onChange={this.handleColorsCountChange}\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                              value={colorsCount}\n                            />\n                          </Grid>\n                          )}\n                          <Grid item style={{ maxWidth: '170px' }}>\n                            <Grid container direction=\"column\">\n                              <Grid item>\n                                <span>Цвета карты</span>\n                              </Grid>\n                              <Grid item>\n                                <div style={{\n                                  display: 'flex', flexFlow: 'wrap', border: '1px solid #D8DEE7', borderRadius: '4px',\n                                }}\n                                >\n                                  {colors.map((color, index) => {\n                                    return (\n                                      <ColorPickerButton\n                                        key={index}\n                                        color={color}\n                                        handleColorChange={this.handleColorsChange(index)}\n                                      />\n                                    );\n                                  })}\n                                </div>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </>\n                      ) : (\n                        <Grid item style={{ maxWidth: '170px' }}>\n                          <Grid container direction=\"column\">\n                            <Grid item>\n                              <span>Цвета индикаторов</span>\n                            </Grid>\n                            <Grid item>\n                              <Grid\n                                container\n                                style={{\n                                  display: 'flex', border: '1px solid #D8DEE7', borderRadius: '4px',\n                                }}\n                              >\n                                {indicatorsColors.map((color, index) => {\n                                  return (\n                                    <Grid\n                                      key={selectedIndicators[index].id}\n                                      item\n                                      style={{\n                                        display: 'flex',\n                                        flexDirection: 'row',\n                                        alignItems: 'center',\n                                        justifyContent: 'start',\n                                      }}\n                                    >\n                                      <ColorPickerButton\n                                        key={index}\n                                        color={color}\n                                        handleColorChange={this.handleIndicatorColorsChange(index)}\n                                      />\n                                      <div>\n                                        <div>\n                                          {selectedIndicators[index].title}\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                  );\n                                })}\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                      )}\n                    <Grid\n                      item\n                      style={{\n                        display: 'flex',\n                        flexDirection: 'row',\n                        alignItems: 'center',\n                        justifyContent: 'start',\n                      }}\n                    >\n                      <ColorPickerButton\n                        color={mapBorderColor}\n                        handleColorChange={this.handleColorChange('mapBorderColor')}\n                      />\n                      <span>\n                        Цвет границ\n                      </span>\n                    </Grid>\n                    {!this.props.isBar\n                    && (\n                      <>\n                        <Grid item>\n                          <FormControlLabel\n                            control={(\n                              <Checkbox\n                                style={{ marginLeft: '4px' }}\n                                checked={isRegionsSigned}\n                                name=\"isRegionsSigned\"\n                                onChange={this.handleCheckboxChange}\n                              />\n                        )}\n                            label=\"Подписать регионы\"\n                          />\n                        </Grid>\n                        {isRegionsSigned\n                    && (\n                      <>\n                        <Grid item>\n                          <FormControlLabel\n                            control={(\n                              <Checkbox\n                                style={{ marginLeft: '4px' }}\n                                checked={isRegionNames2Letters}\n                                name=\"isRegionNames2Letters\"\n                                onChange={this.handleCheckboxChange}\n                              />\n                        )}\n                            label=\"Двухбуквенное сокращение\"\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            alignItems: 'center',\n                            justifyContent: 'start',\n                          }}\n                        >\n                          <ColorPickerButton\n                            color={mapFontColor}\n                            handleColorChange={this.handleColorChange('mapFontColor')}\n                          />\n                          <span>\n                            Цвет текста\n                          </span>\n                        </Grid>\n                        <Grid item>\n                          <TextField\n                            fullWidth\n                            label=\"Размер шрифта\"\n                            inputProps={{ min: 1, max: 30 }}\n                            type=\"number\"\n                            InputLabelProps={{\n                              shrink: true,\n                            }}\n                            value={mapFontSize}\n                            onChange={this.handleFontSizeChange('mapFontSize')}\n                          />\n                        </Grid>\n                      </>\n                    )}\n                      </>\n                    )}\n                  </Grid>\n                </TabPanel>\n                <TabPanel value={currentTab} index=\"legend\">\n                  <Grid container direction=\"column\" spacing={1}>\n                    <Grid item>\n                      <TextField\n                        fullWidth\n                        label=\"Размер шрифта\"\n                        inputProps={{ min: 1, max: 30 }}\n                        type=\"number\"\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                        value={legendFontSize}\n                        onChange={this.handleFontSizeChange('legendFontSize')}\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      style={{\n                        display: 'flex',\n                        flexDirection: 'row',\n                        alignItems: 'center',\n                        justifyContent: 'start',\n                      }}\n                    >\n                      <ColorPickerButton\n                        color={legendFontColor}\n                        handleColorChange={this.handleColorChange('legendFontColor')}\n                      />\n                      <span>\n                        Цвет текста легенды\n                      </span>\n                    </Grid>\n                  </Grid>\n                </TabPanel>\n              </>\n            </Paper>\n          </Popper>\n          {!this.props.isBar ? (\n            <WrappedComponent\n              {...this.props}\n              colors={colors}\n              colorsCount={colorsCount}\n              isLegendIntervaled={isLegendIntervaled}\n              isRegionsSigned={isRegionsSigned}\n              mainMapColor={mainMapColor}\n              mapFontColor={mapFontColor}\n              mapBorderColor={mapBorderColor}\n              mapFontSize={mapFontSize}\n              legendFontSize={legendFontSize}\n              isRegionNames3Letters={!isRegionNames2Letters}\n              legendFontColor={legendFontColor}\n            />\n          ) : (\n            <WrappedComponent\n              {...this.props}\n              colors={colors}\n              selectedIndicators={selectedIndicators}\n              isRegionsSigned={isRegionsSigned}\n              mainMapColor={mainMapColor}\n              mapBorderColor={mapBorderColor}\n              mapFontSize={mapFontSize}\n              legendFontSize={legendFontSize}\n              handleSelectedIndicatorsChange={this.handleSelectedIndicatorsChange}\n              legendFontColor={legendFontColor}\n              indicatorsColors={selectedIndicators.reduce((r, a, index) => {\n                r[a.id] = indicatorsColors[index];\n                return r;\n              }, {})}\n            />\n          )}\n        </div>\n      );\n    }\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n  Table,\n  TableContainer,\n  Paper,\n} from '@material-ui/core';\n\nconst MainTable = ({\n  data,\n}) => {\n  return (\n    <>\n      {data && data.length > 0 && (\n        <>\n          <TableContainer\n            border={1}\n            component={Paper}\n            style={{ marginTop: '16px' }}\n          >\n            <Table>\n              <TableHead className=\"table-head\">\n                <TableRow>\n                  <TableCell>Название субъекта</TableCell>\n                  <TableCell>Год</TableCell>\n                  <TableCell>Значение</TableCell>\n                  <TableCell>Единицы измерения</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((statisticRow) => (\n                  <TableRow key={statisticRow.id}>\n                    <TableCell>{statisticRow.Region.reg_alias_human_name}</TableCell>\n                    <TableCell>{statisticRow.year}</TableCell>\n                    <TableCell>{statisticRow.value}</TableCell>\n                    <TableCell>{statisticRow.measurement_unit}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </>\n      )}\n    </>\n  );\n};\n\n\nexport default connect(\n  state => {\n    return {\n    };\n  },\n  {\n  },\n)(MainTable);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport SaveIcon from '@material-ui/icons/Save';\nimport {\n  Button,\n  ListItemText,\n  Checkbox,\n  Chip,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Select,\n  Input,\n  Grid,\n  Typography,\n  Menu,\n} from '@material-ui/core';\nimport MainTable from './MainTable';\nimport StatisticHeader from '../components/StatisticHeader';\nimport { getStatisticByIndicator } from '../actions/statisticAction';\nimport { exportToJson, exportToCSV, exportToXLSX } from '../constants/helpers';\n\n\nconst TableTab = ({\n  currentIndicator, statistic, years, regions, getStatisticByIndicator,\n}) => {\n  const [selectedYears, setSelectedYears] = React.useState([]);\n  const [selectedRegions, setSelectedRegions] = React.useState([]);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  useEffect(() => {\n    if (selectedRegions.length === 0) {\n      setSelectedRegions(regions);\n    }\n    if (selectedYears.length === 0) {\n      setSelectedYears(years);\n    }\n  }, [statistic]);\n\n  useEffect(() => {\n    if (currentIndicator) {\n      setSelectedRegions([]);\n      setSelectedYears([]);\n      getStatisticByIndicator({ indicator: currentIndicator });\n    }\n  }, [currentIndicator]);\n\n  const handleSelectedYearsChange = (event) => {\n    setSelectedYears(event.target.value);\n    getStatisticByIndicator({ indicator: currentIndicator, regions: selectedRegions, years: event.target.value });\n  };\n\n  const handleSelectedRegions = (event) => {\n    setSelectedRegions(event.target.value);\n    getStatisticByIndicator({ indicator: currentIndicator, years: selectedYears, regions: event.target.value });\n  };\n\n  const handleSaveClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleSaveClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        alignItems=\"flex-end\"\n        justify=\"space-between\"\n      >\n        <Grid item xs={4}>\n          <FormControl fullWidth>\n            <InputLabel shrink id=\"region-select-label\">\n              Регион\n            </InputLabel>\n            <Select\n              labelId=\"region-select-label\"\n              multiple\n              value={selectedRegions || ''}\n              onChange={handleSelectedRegions}\n              input={<Input />}\n              renderValue={(selected) => selected.map((reg) => reg.reg_alias_human_name).join(', ')}\n              MenuProps={{\n                anchorOrigin: {\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                },\n                transformOrigin: {\n                  vertical: 'top',\n                  horizontal: 'left',\n                },\n                getContentAnchorEl: null,\n              }}\n            >\n              {regions && regions.map((region) => (\n                <MenuItem key={region.reg_ID} value={region}>\n                  <Checkbox checked={selectedRegions.indexOf(region) > -1} />\n                  <ListItemText primary={region.reg_alias_human_name} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={7} style={{ paddingRight: '0px' }}>\n          <Grid container alignItems=\"center\" justify=\"flex-end\">\n            <Grid xs={9} item style={{ paddingRight: '10px' }}>\n              <FormControl fullWidth>\n                <InputLabel shrink id=\"years-select-label\">\n                  Годы\n                </InputLabel>\n                <Select\n                  labelId=\"years-select-label\"\n                  multiple\n                  value={selectedYears || ''}\n                  onChange={handleSelectedYearsChange}\n                  input={<Input />}\n                  renderValue={(selected) => (\n                    <div className=\"chips\">\n                      {selected.map((value) => (\n                        <Chip key={value} label={value} className=\"chips\" />\n                      ))}\n                    </div>\n                  )}\n                  MenuProps={{\n                    anchorOrigin: {\n                      vertical: 'bottom',\n                      horizontal: 'left',\n                    },\n                    transformOrigin: {\n                      vertical: 'top',\n                      horizontal: 'left',\n                    },\n                    getContentAnchorEl: null,\n                  }}\n                >\n                  {years && years.map((year) => (\n                    <MenuItem key={year} value={year}>\n                      <Checkbox checked={selectedYears.indexOf(year) > -1} />\n                      <ListItemText primary={year} />\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={3}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"medium\"\n                startIcon={<SaveIcon />}\n                onClick={handleSaveClick}\n              >\n                Сохранить\n              </Button>\n              <Menu\n                anchorEl={anchorEl}\n                getContentAnchorEl={null}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'center',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'center',\n                }}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleSaveClose}\n              >\n                <MenuItem onClick={() => {\n                  exportToJson(statistic);\n                }}\n                >\n                  JSON\n                </MenuItem>\n                <MenuItem onClick={() => {\n                  exportToCSV(statistic);\n                }}\n                >\n                  CSV\n                </MenuItem>\n                <MenuItem onClick={() => {\n                  exportToXLSX(statistic);\n                }}\n                >\n                  XLSX (Excel)\n                </MenuItem>\n              </Menu>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <StatisticHeader currentIndicator={currentIndicator} selectedYears={selectedYears} />\n      <MainTable data={statistic} />\n    </>\n  );\n};\n\nexport default connect(\n  (state) => {\n  },\n  {\n    getStatisticByIndicator,\n  },\n)(TableTab);\n","import React from 'react';\nimport {\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n  Table,\n  TableContainer,\n  Paper,\n} from '@material-ui/core';\n\nconst RegionTable = ({\n  data,\n}) => {\n  return (\n    <>\n      {data && data.length > 0 && (\n        <>\n          <TableContainer\n            border={1}\n            component={Paper}\n            style={{ marginTop: '16px' }}\n          >\n            <Table>\n              <TableHead className=\"table-head\">\n                <TableRow>\n                  <TableCell>Место</TableCell>\n                  <TableCell>Индикатор</TableCell>\n                  <TableCell>Значение</TableCell>\n                  <TableCell>Единицы измерения</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((statisticRow) => (\n                  <TableRow key={statisticRow.id}>\n                    <TableCell>{`${statisticRow.place}/85`}</TableCell>\n                    <TableCell>{statisticRow.Indicator.title}</TableCell>\n                    <TableCell>{statisticRow.value}</TableCell>\n                    <TableCell>{statisticRow.measurement_unit}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </>\n      )}\n    </>\n  );\n};\n\n\nexport default RegionTable;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  ListItemText,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Select,\n  Input,\n  Grid,\n} from '@material-ui/core';\nimport RegionTable from './RegionTable';\nimport { getStatisticForRegionTop } from '../actions/statisticAction';\n\nconst RegionRating = ({\n  years,\n  regions,\n  getStatisticForRegionTop,\n  top,\n}) => {\n  const [selectedYear, setSelectedYear] = React.useState(null);\n  const [selectedRegion, setSelectedRegion] = React.useState(null);\n\n\n  useEffect(() => {\n    if (selectedYear === null && years && years.length > 0) {\n      setSelectedYear(years[0]);\n    }\n  }, [years]);\n\n  useEffect(() => {\n    if (selectedRegion === null && regions && regions.length > 0) {\n      setSelectedRegion(regions[0]);\n    }\n  }, [regions]);\n\n  useEffect(() => {\n    if (selectedRegion !== null && selectedYear !== null) {\n      getStatisticForRegionTop({ year: selectedYear, region: selectedRegion });\n    }\n  }, [selectedYear, selectedRegion]);\n\n  const handleSelectedYearChange = (event) => {\n    setSelectedYear(event.target.value);\n  };\n\n  const handleSelectedRegion = (event) => {\n    setSelectedRegion(event.target.value);\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        alignItems=\"flex-end\"\n        justify=\"space-between\"\n      >\n        <Grid item xs={4}>\n          <FormControl fullWidth>\n            <InputLabel shrink id=\"region-select-label\">\n              Регион\n            </InputLabel>\n            <Select\n              labelId=\"region-select-label\"\n              value={selectedRegion}\n              onChange={handleSelectedRegion}\n              input={<Input />}\n              MenuProps={{\n                anchorOrigin: {\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                },\n                transformOrigin: {\n                  vertical: 'top',\n                  horizontal: 'left',\n                },\n                getContentAnchorEl: null,\n              }}\n            >\n              {regions && regions.map((region) => (\n                <MenuItem key={region.reg_ID} value={region}>\n                  <ListItemText primary={region.reg_alias_human_name} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={7} style={{ paddingRight: '0px' }}>\n          <FormControl fullWidth>\n            <InputLabel shrink id=\"years-select-label\">\n              Год\n            </InputLabel>\n            <Select\n              labelId=\"years-select-label\"\n              value={selectedYear}\n              onChange={handleSelectedYearChange}\n              input={<Input />}\n              MenuProps={{\n                anchorOrigin: {\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                },\n                transformOrigin: {\n                  vertical: 'top',\n                  horizontal: 'left',\n                },\n                getContentAnchorEl: null,\n              }}\n            >\n              {years && years.map((year) => (\n                <MenuItem key={year} value={year}>\n                  <ListItemText primary={year} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <RegionTable data={top} />\n    </>\n  );\n};\n\nexport default connect(\n  (state) => {\n    return {\n      top: state.statistic.top,\n    };\n  },\n  {\n    getStatisticForRegionTop,\n  },\n)(RegionRating);\n","import React from 'react';\nimport {\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n  Table,\n  TableContainer,\n  Paper,\n} from '@material-ui/core';\n\nconst IndicatorTable = ({\n  data,\n}) => {\n  return (\n    <>\n      {data && data.length > 0 && (\n        <>\n          <TableContainer\n            border={1}\n            component={Paper}\n            style={{ marginTop: '16px' }}\n          >\n            <Table>\n              <TableHead className=\"table-head\">\n                <TableRow>\n                  <TableCell>Место</TableCell>\n                  <TableCell>Регион</TableCell>\n                  <TableCell>Значение</TableCell>\n                  <TableCell>Единицы измерения</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.map((statisticRow) => (\n                  <TableRow key={statisticRow.id}>\n                    <TableCell>{`${statisticRow.place}/85`}</TableCell>\n                    <TableCell>{statisticRow.Region.reg_alias_human_name}</TableCell>\n                    <TableCell>{statisticRow.value}</TableCell>\n                    <TableCell>{statisticRow.measurement_unit}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </>\n      )}\n    </>\n  );\n};\n\n\nexport default IndicatorTable;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { VariableSizeList } from 'react-window';\nimport { Typography } from '@material-ui/core';\n\nconst LISTBOX_PADDING = 8;\n\nfunction renderRow(props) {\n  const { data, index, style } = props;\n  return React.cloneElement(data[index], {\n    style: {\n      ...style,\n      top: style.top + LISTBOX_PADDING,\n    },\n  });\n}\n\nconst OuterElementContext = React.createContext({});\n\nconst OuterElementType = React.forwardRef((props, ref) => {\n  const outerProps = React.useContext(OuterElementContext);\n  return <div ref={ref} {...props} {...outerProps} />;\n});\n\nfunction useResetCache(data) {\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    if (ref.current != null) {\n      ref.current.resetAfterIndex(0, true);\n    }\n  }, [data]);\n  return ref;\n}\n\n// Adapter for react-window\nconst ListboxComponent = React.forwardRef((props, ref) => {\n  const { children, ...other } = props;\n  const itemData = React.Children.toArray(children);\n  const theme = useTheme();\n  const smUp = useMediaQuery(theme.breakpoints.up('sm'), { noSsr: true });\n  const itemCount = itemData.length;\n  const itemSize = smUp ? 36 : 48;\n\n  const getChildSize = (child) => {\n    if (React.isValidElement(child) && child.type === ListSubheader) {\n      return 48;\n    }\n\n    return itemSize;\n  };\n\n  const getHeight = () => {\n    if (itemCount > 8) {\n      return 8 * itemSize;\n    }\n    return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\n  };\n\n  const gridRef = useResetCache(itemCount);\n\n  return (\n    <div ref={ref}>\n      <OuterElementContext.Provider value={other}>\n        <VariableSizeList\n          itemData={itemData}\n          height={getHeight() + 2 * LISTBOX_PADDING}\n          width=\"100%\"\n          ref={gridRef}\n          outerElementType={OuterElementType}\n          innerElementType=\"ul\"\n          itemSize={(index) => getChildSize(itemData[index])}\n          overscanCount={5}\n          itemCount={itemCount}\n        >\n          {renderRow}\n        </VariableSizeList>\n      </OuterElementContext.Provider>\n    </div>\n  );\n});\n\nconst useStyles = makeStyles({\n  listbox: {\n    boxSizing: 'border-box',\n    '& ul': {\n      padding: 0,\n      margin: 0,\n    },\n  },\n});\n\nexport default function VirtualizedSelect({ options, label, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Autocomplete\n      disableListWrap\n      classes={classes}\n      ListboxComponent={ListboxComponent}\n      noOptionsText=\"Не найдено\"\n      options={options}\n      renderInput={(params) => <TextField {...params} InputLabelProps={{ shrink: true }} label={label} />}\n      renderOption={(option) => <Typography noWrap key={option.id} value={option}>{option.title}</Typography>}\n      getOptionLabel={(option) => {\n        return option.title || '';\n      }}\n      getOptionSelected={(option, value) => value.id === option.id}\n      {...rest}\n    />\n  );\n}\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  ListItemText,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Select,\n  Input,\n  Grid,\n} from '@material-ui/core';\nimport IndicatorTable from './IndicatorTable';\nimport { getStatisticForIndicatorTop } from '../actions/statisticAction';\nimport VirtualizedSelect from '../components/VertualizedSelect';\n\n\nconst IndicatorRating = ({\n  years,\n  indicators,\n  getStatisticForIndicatorTop,\n  top,\n}) => {\n  const [selectedYear, setSelectedYear] = React.useState(null);\n  const [selectedIndicator, setSelectedIndicator] = React.useState(null);\n\n\n  useEffect(() => {\n    if (selectedYear === null && years && years.length > 0) {\n      setSelectedYear(years[0]);\n    }\n  }, [years]);\n\n  useEffect(() => {\n    if (selectedIndicator === null && indicators && indicators.length > 0) {\n      setSelectedIndicator(indicators[0]);\n    }\n  }, [indicators]);\n\n  useEffect(() => {\n    if (selectedIndicator !== null && selectedYear !== null) {\n      getStatisticForIndicatorTop({ year: selectedYear, indicator: selectedIndicator });\n    }\n  }, [selectedYear, selectedIndicator]);\n\n  const handleSelectedYearChange = (event) => {\n    setSelectedYear(event.target.value);\n  };\n\n  const handleSelectedIndicator = (event, newValue) => {\n    setSelectedIndicator(newValue);\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        alignItems=\"flex-end\"\n        justify=\"space-between\"\n      >\n        <Grid item xs={4}>\n          <VirtualizedSelect\n            id=\"grouped-select\"\n            label=\"Индикатор\"\n            value={selectedIndicator || ''}\n            options={indicators || []}\n            onChange={handleSelectedIndicator}\n          />\n        </Grid>\n        <Grid item xs={7} style={{ paddingRight: '0px' }}>\n          <FormControl fullWidth>\n            <InputLabel shrink id=\"years-select-label\">\n              Год\n            </InputLabel>\n            <Select\n              labelId=\"years-select-label\"\n              value={selectedYear}\n              onChange={handleSelectedYearChange}\n              input={<Input />}\n              MenuProps={{\n                anchorOrigin: {\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                },\n                transformOrigin: {\n                  vertical: 'top',\n                  horizontal: 'left',\n                },\n                getContentAnchorEl: null,\n              }}\n            >\n              {years && years.map((year) => (\n                <MenuItem key={year} value={year}>\n                  <ListItemText primary={year} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <IndicatorTable data={top} />\n    </>\n  );\n};\n\nexport default connect(\n  (state) => {\n    return {\n      top: state.statistic.top,\n    };\n  },\n  {\n    getStatisticForIndicatorTop,\n  },\n)(IndicatorRating);\n","\nimport React, { useState, useEffect } from 'react';\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport { randomColor } from '../constants/helpers';\n\n\nconst LineDiagram = ({ diagramStatistic }) => {\n  const [opacity, setOpacity] = useState({});\n  const [colors, setColors] = useState({});\n\n  useEffect(() => {\n    // const yKeys = Object.keys(diagramStatistic[0]).filter((key) => key !== 'year').map((stat, index) => ({ [stat]: 1 }));\n    const yKeys = Object.keys(diagramStatistic[0]).filter((key) => key !== 'year').reduce((a, value) => {\n      return { ...a, [value]: 1 };\n    }, {});\n    setOpacity(yKeys);\n    const newColors = Object.keys(diagramStatistic[0]).filter((key) => key !== 'year').reduce((a, value) => {\n      return { ...a, [value]: randomColor() };\n    }, {});\n    setColors(newColors);\n  }, [diagramStatistic]);\n\n  const handleMouseEnter = (o) => {\n    const { dataKey } = o;\n    setOpacity({ ...opacity, [dataKey]: 0.5 });\n  };\n\n  const handleMouseLeave = (o) => {\n    const { dataKey } = o;\n    setOpacity({ ...opacity, [dataKey]: 1 });\n  };\n  // const yKeys = Object.keys(diagramStatistic[0]).filter((key) => key !== 'year').reduce((a, value) => {\n  //   return {...a,[stat]: 1}\n  // },{});\n\n  return (\n    <>\n      <ResponsiveContainer>\n        <LineChart\n          data={diagramStatistic}\n          margin={{\n            top: 5, right: 30, left: 40, bottom: 5,\n          }}\n        >\n          {Object.keys(diagramStatistic[0]).filter((key) => key !== 'year').map((stat, index) => {\n            return (\n              <Line key={index} type=\"linear\" dataKey={stat} stroke={colors[stat]} strokeOpacity={opacity[stat]} activeDot={{ r: 8 }} />\n            );\n          },\n          )}\n          <Tooltip />\n          <Legend onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\n          <XAxis\n            dataKey=\"year\"\n            type=\"category\"\n            // label=\"lol\"\n          />\n          <YAxis\n            unit={diagramStatistic.measurement_unit}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </>\n  );\n};\n\nexport default LineDiagram;\n","\nimport React, { useState, useEffect } from 'react';\nimport {\n  BarChart,\n  Bar,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport { randomColor } from '../constants/helpers';\n\n\nconst BarDiagram = ({ diagramStatistic }) => {\n  const [opacity, setOpacity] = useState({});\n  const [colors, setColors] = useState({});\n\n  useEffect(() => {\n    // const yKeys = Object.keys(diagramStatistic[0]).filter((key) => key !== 'year').map((stat, index) => ({ [stat]: 1 }));\n    const yKeys = Object.keys(diagramStatistic[0]).filter((key) => key !== 'year').reduce((a, value) => {\n      return { ...a, [value]: 1 };\n    }, {});\n    setOpacity(yKeys);\n    const newColors = Object.keys(diagramStatistic[0]).filter((key) => key !== 'year').reduce((a, value) => {\n      return { ...a, [value]: randomColor() };\n    }, {});\n    setColors(newColors);\n  }, [diagramStatistic]);\n\n  const handleMouseEnter = (o) => {\n    const { dataKey } = o;\n    setOpacity({ ...opacity, [dataKey]: 0.5 });\n  };\n\n  const handleMouseLeave = (o) => {\n    const { dataKey } = o;\n    setOpacity({ ...opacity, [dataKey]: 1 });\n  };\n\n  // const yKeys = Object.keys(diagramStatistic[0]).filter((key) => key !== 'year').reduce((a, value) => {\n  //   return {...a,[stat]: 1}\n  // },{});\n\n  return (\n    <>\n      <ResponsiveContainer>\n        <BarChart\n          data={diagramStatistic}\n          margin={{\n            top: 5, right: 30, left: 40, bottom: 5,\n          }}\n        >\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"year\" type=\"category\" />\n          <YAxis unit={diagramStatistic.measurement_unit} />\n          <Tooltip />\n          <Legend onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} />\n          {Object.keys(diagramStatistic[0]).filter((key) => key !== 'year').map((stat, index) => {\n            return (\n              <Bar key={index} dataKey={stat} fill={colors[stat]} opacity={opacity[stat]} />\n            );\n          },\n          )}\n        </BarChart>\n      </ResponsiveContainer>\n    </>\n  );\n};\n\nexport default BarDiagram;\n","\nimport React, { useState, useEffect } from 'react';\nimport {\n  ResponsiveContainer,\n  Tooltip,\n  PolarGrid,\n  RadarChart,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n  Radar,\n  Legend,\n} from 'recharts';\n\nimport { randomColor } from '../constants/helpers';\n\n\nconst RadarDiagram = ({ diagramStatistic }) => {\n  const [colors, setColors] = useState({});\n\n  useEffect(() => {\n    // const yKeys = Object.keys(diagramStatistic[0]).filter((key) => key !== 'year').map((stat, index) => ({ [stat]: 1 }));\n    const newColors = Object.keys(diagramStatistic[0]).filter((key) => key !== 'region').reduce((a, value) => {\n      return { ...a, [value]: randomColor() };\n    }, {});\n    setColors(newColors);\n  }, [diagramStatistic]);\n\n  //   year: \"2015\"\n  // Амурская область: 19.2\n  // Архангельская область: 8.65\n  // Астраханская область: 12.38\n  // Белгородская область: 4.81\n  // {\n  //   subject: 'History', A: 65, B: 85, fullMark: 150,\n  // },\n  // {\n  //   region: 'History', 2014: 65, 2015: 85, fullMark: 150,\n  // },\n\n  // const formattedDiagramStatistic = diagramStatistic.reduce((a, yearStatistic) => {\n  //   const newObj = Object.keys(yearStatistic.filter((key) => key !== 'year')).reduce((b, value) => {\n  //     b[value] = b[value] || {};\n  //     b[value] = { ...b[value], [yearStatistic.year]: yearStatistic[value] };\n  //     return b;\n  //   }, {});\n\n  //   a=newObj.map(()=>{\n\n  //   });\n  //   a.push({ year: yearStatistic.year, values: newObj });\n\n  //   return a;\n  // }, {});\n  // const formattedDiagramStatistic = diagramStatistic.reduce((a, yearStatistic) => {\n  //   const newObj = Object.keys(yearStatistic.filter((key) => key !== 'year')).reduce((b, value) => {\n  //     b.push({ region: value, value: yearStatistic[value] });\n  //     return b;\n  //   }, []);\n  //   a.push({ year: yearStatistic.year, values: newObj });\n  //   return a;\n  // }, []);\n\n  // const yKeys = Object.keys(diagramStatistic[0]).filter((key) => key !== 'year').reduce((a, value) => {\n  //   return {...a,[stat]: 1}\n  // },{});\n\n  return (\n    <>\n      <ResponsiveContainer>\n        <RadarChart\n          outerRadius={150}\n          margin={{\n            top: 5, right: 30, left: 20, bottom: 5,\n          }}\n          data={diagramStatistic}\n        >\n          <PolarGrid />\n          <PolarAngleAxis dataKey=\"region\" />\n          <PolarRadiusAxis />\n          {Object.keys(diagramStatistic[0]).filter((key) => key !== 'region').map((stat, index) => {\n            return (\n              <Radar key={index} dataKey={stat} stroke={colors[stat]} fill={colors[stat]} fillOpacity={0.6} />\n            );\n          },\n          )}\n          <Tooltip />\n          <Legend />\n        </RadarChart>\n      </ResponsiveContainer>\n    </>\n  );\n};\n\nexport default RadarDiagram;\n","import React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  ListItemText,\n  Checkbox,\n  Chip,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Select,\n  Input,\n  Grid,\n  Typography,\n  IconButton,\n  TextField,\n} from '@material-ui/core';\n\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport TimelineIcon from '@material-ui/icons/Timeline';\n\nimport TrackChangesTwoToneIcon from '@material-ui/icons/TrackChangesTwoTone';\nimport { getStatisticForDiagram, getStatisticForRadarDiagram } from '../actions/statisticAction';\nimport LineDiagramm from '../components/LineDiagram';\nimport BarDiagram from '../components/BarDiagram';\nimport RadarDiagram from '../components/RadarDiagram';\nimport StatisticHeader from '../components/StatisticHeader';\n\n\nconst DiagramsTab = (props) => {\n  const {\n    currentIndicator,\n    diagramStatistic,\n    years,\n    regions,\n    getStatisticForDiagram,\n    radarDiagramStatistic,\n    getStatisticForRadarDiagram,\n  } = props;\n  const [selectedYears, setSelectedYears] = React.useState([]);\n  const [selectedRegions, setSelectedRegions] = React.useState([]);\n  const [selectedDiagram, setSelectedDiagram] = React.useState('line');\n\n  useEffect(() => {\n    // if (selectedRegions.length === 0) {\n    //   setSelectedRegions(regions);\n    // }\n    // if (selectedYears.length === 0) {\n    //   setSelectedYears(years);\n    // }\n  }, [diagramStatistic]);\n\n  useEffect(() => {\n    if (currentIndicator) {\n      setSelectedRegions([]);\n      setSelectedYears([]);\n      getStatisticForDiagram({ indicator: currentIndicator });\n      getStatisticForRadarDiagram({ indicator: currentIndicator });\n    }\n  }, [currentIndicator]);\n\n  const handleSelectedYearsChange = (event) => {\n    setSelectedYears(event.target.value);\n    getStatisticForDiagram({ indicator: currentIndicator, regions: selectedRegions, years: event.target.value });\n    getStatisticForRadarDiagram({ indicator: currentIndicator, regions: selectedRegions, years: event.target.value });\n  };\n\n  const handleSelectedRegions = (event, newValue) => {\n    setSelectedRegions(newValue);\n    getStatisticForDiagram({ indicator: currentIndicator, years: selectedYears, regions: newValue });\n    getStatisticForRadarDiagram({ indicator: currentIndicator, years: selectedYears, regions: newValue });\n  };\n\n  const diagrams = {\n    line: (<LineDiagramm diagramStatistic={diagramStatistic} />),\n    bar: (<BarDiagram diagramStatistic={diagramStatistic} />),\n    radar: (<RadarDiagram diagramStatistic={radarDiagramStatistic} />),\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        alignItems=\"flex-end\"\n        justify=\"space-between\"\n      >\n        <Grid item xs={4}>\n          <Autocomplete\n            options={regions}\n            multiple\n            onChange={handleSelectedRegions}\n            value={selectedRegions}\n            noOptionsText=\"Не найдено\"\n            disableCloseOnSelect\n            // renderTags={() => {}}\n            // renderTags={(value, getTagProps) => (\n            //   <div>\n            //     <span style={{ whiteSpace: 'nowrap' }}>\n            //       {`${value.map((reg) => reg.reg_alias_human_name).join(', ')}`}\n            //     </span>\n            //   </div>\n            // )}\n            renderTags={(value, getTagProps) => (\n              <div className=\"chips\">\n                {value.map((reg) => (\n                  <Chip key={reg.reg_ID} label={reg.reg_alias_human_name} className=\"chips\" />\n                ))}\n              </div>\n            )}\n            getOptionLabel={(option) => option.reg_alias_human_name}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Регионы\"\n                InputLabelProps={{ shrink: true }}\n              />\n            )}\n            // MenuProps={{\n            //   anchorOrigin: {\n            //     vertical: 'bottom',\n            //     horizontal: 'left',\n            //   },\n            //   transformOrigin: {\n            //     vertical: 'top',\n            //     horizontal: 'left',\n            //   },\n            //   getContentAnchorEl: null,\n            // }}\n            renderOption={(option, { selected }) => (\n              <>\n                <Checkbox\n                  style={{ marginRight: 8 }}\n                  checked={selected}\n                />\n                {option.reg_alias_human_name}\n              </>\n            )}\n            getOptionSelected={(option, value) => value.reg_ID === option.reg_ID}\n          />\n        </Grid>\n        <Grid item xs={7} style={{ paddingRight: '0px' }}>\n          <FormControl fullWidth>\n            <InputLabel shrink id=\"years-select-label\">\n              Годы\n            </InputLabel>\n\n            <Select\n              labelId=\"years-select-label\"\n              multiple\n              value={selectedYears || ''}\n              onChange={handleSelectedYearsChange}\n              input={<Input />}\n              renderValue={(selected) => (\n                <div className=\"chips\">\n                  {selected.map((value) => (\n                    <Chip key={value} label={value} className=\"chip\" />\n                  ))}\n                </div>\n              )}\n              MenuProps={{\n                anchorOrigin: {\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                },\n                transformOrigin: {\n                  vertical: 'top',\n                  horizontal: 'left',\n                },\n                getContentAnchorEl: null,\n              }}\n            >\n              {years && years.map((year) => (\n                <MenuItem key={year} value={year}>\n                  <Checkbox checked={selectedYears.indexOf(year) > -1} />\n                  <ListItemText primary={year} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        style={{\n          justifyContent: 'space-between',\n          paddingTop: '16px',\n          alignItems: 'center',\n        }}\n      >\n        <Grid item>\n          <StatisticHeader currentIndicator={currentIndicator} selectedYears={selectedYears} />\n        </Grid>\n        <Grid item>\n          <IconButton\n            component=\"span\"\n            size=\"small\"\n            onClick={() => {\n              setSelectedDiagram('line');\n            }}\n            className={clsx('chart-button', selectedDiagram === 'line' && 'selected')}\n          >\n            <TimelineIcon />\n          </IconButton>\n          <IconButton\n            component=\"span\"\n            size=\"small\"\n            onClick={() => {\n              setSelectedDiagram('bar');\n            }}\n            className={clsx('chart-button', selectedDiagram === 'bar' && 'selected')}\n          >\n            <BarChartIcon />\n          </IconButton>\n          <IconButton\n            component=\"span\"\n            size=\"small\"\n            onClick={() => {\n              setSelectedDiagram('radar');\n            }}\n            className={clsx('chart-button', selectedDiagram === 'radar' && 'selected')}\n          >\n            <TrackChangesTwoToneIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n      <div style={{ width: '100%', height: '800px', marginTop: '16px' }}>\n        {diagramStatistic && diagramStatistic.length > 0\n          ? (diagrams[selectedDiagram]) : (\n            <div style={{\n              height: '100%',\n              textAlign: 'center',\n              fontSize: '25px',\n            }}\n            >\n              Необходимо выбрать как минимум 1 дату и 1 регион\n            </div>\n          )}\n      </div>\n\n    </>\n  );\n};\n\nexport default connect(\n  (state) => {\n    return {\n      diagramStatistic: state.statistic.diagramStatistic,\n      radarDiagramStatistic: state.statistic.radarDiagramStatistic,\n    };\n  },\n  {\n    getStatisticForDiagram,\n    getStatisticForRadarDiagram,\n  },\n)(DiagramsTab);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Checkbox,\n  TextField,\n  Paper,\n  Chip,\n  Grid,\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport VirtualizedSelect from './VertualizedSelect';\n\n\nconst IndicatorSelectorCard = ({\n  handleSelectedCatogories,\n  categories, selectedCatogories,\n  currentIndicator, handleCurrentIndicatorChange,\n  indicators,\n}) => {\n  return (\n    <>\n      <Paper elevation={3} square style={{ padding: '24px' }}>\n        <Grid container direction=\"column\" spacing={2}>\n          <Grid item>\n            <Autocomplete\n              options={categories}\n              multiple\n              onChange={handleSelectedCatogories}\n              value={selectedCatogories}\n              noOptionsText=\"Не найдено\"\n              disableCloseOnSelect\n            // renderTags={() => {}}\n            // renderTags={(value, getTagProps) => (\n            //   <div>\n            //     <span style={{ whiteSpace: 'nowrap' }}>\n            //       {`${value.map((reg) => reg.reg_alias_human_name).join(', ')}`}\n            //     </span>\n            //   </div>\n            // )}\n              renderTags={(value, getTagProps) => (\n                <div className=\"chips\">\n                  {value.map((category) => (\n                    <Chip key={category.id} label={category.title} className=\"chips\" />\n                  ))}\n                </div>\n              )}\n              getOptionLabel={(option) => option.title}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Категории индикаторов\"\n                  InputLabelProps={{ shrink: true }}\n                />\n              )}\n              renderOption={(option, { selected }) => (\n                <>\n                  <Checkbox\n                    style={{ marginRight: 8 }}\n                    checked={selected}\n                  />\n                  {option.title}\n                </>\n              )}\n              getOptionSelected={(option, value) => value.id === option.id}\n            />\n          </Grid>\n          <Grid item>\n            <VirtualizedSelect\n              id=\"grouped-select\"\n              label=\"Индикатор\"\n              value={currentIndicator || ''}\n              options={indicators || []}\n              onChange={handleCurrentIndicatorChange}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n};\n\nexport default IndicatorSelectorCard;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Tabs,\n  Tab,\n  Paper,\n  Box,\n  Container,\n  LinearProgress,\n  FormControl,\n  Radio,\n  RadioGroup,\n  FormLabel,\n  FormControlLabel,\n} from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { getIndicators } from '../actions/indicatorsAction';\nimport { getCategories } from '../actions/categoriesAction';\n\nimport { getStatisticByIndicator } from '../actions/statisticAction';\n\nimport MapTab from './MapTab';\nimport TableTab from './TableTab';\nimport RegionRating from './RegionRating';\nimport IndicatorRating from './IndicatorRating';\nimport DiagramsTab from './DiagramsTab';\nimport IndicatorSelectorCard from '../components/IndicatorSelectorCard';\n\nimport TabPanel from '../components/TabPanel';\n\nfunction getTabProps(index) {\n  return {\n    id: `tab-${index}`,\n    'aria-controls': `tabpanel-${index}`,\n    value: index,\n  };\n}\n\nfunction App({\n  statistic,\n  indicators,\n  getIndicators,\n  categories,\n  getCategories,\n  years,\n  getStatisticByIndicator,\n  regions,\n  isLoading,\n}) {\n  const [currentTab, setCurrentTab] = useState('map');\n\n  const [selectedRatingType, setSelectedRatingType] = useState('region');\n\n  const [currentIndicator, setCurrentIndicator] = useState(\n    indicators[0] || null,\n  );\n\n  const [selectedCatogories, setSelectedCatogories] = React.useState([]);\n\n  useEffect(() => {\n    setCurrentIndicator(indicators[0]);\n  }, [indicators]);\n\n  useEffect(() => {\n    if (currentIndicator) {\n      getStatisticByIndicator({ indicator: currentIndicator });\n    }\n  }, [currentIndicator]);\n\n  useEffect(() => {\n    if (!categories || categories.length === 0) getCategories();\n  });\n\n  useEffect(() => {\n    getIndicators(selectedCatogories);\n  }, [selectedCatogories]);\n\n\n  const handleTabChange = (event, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  const handleRatingType = (event, newValue) => {\n    setSelectedRatingType(newValue);\n  };\n\n  const handleCurrentIndicatorChange = (event, newValue) => {\n    setCurrentIndicator(newValue);\n  };\n\n  const handleSelectedCatogories = (event, newValue) => {\n    setSelectedCatogories(newValue);\n  };\n\n  return (\n    <Box>\n      {currentTab !== 'bar-map' && currentTab !== 'rating' && (\n      <Container>\n        <IndicatorSelectorCard\n          handleSelectedCatogories={handleSelectedCatogories}\n          categories={categories}\n          selectedCatogories={selectedCatogories}\n          currentIndicator={currentIndicator}\n          handleCurrentIndicatorChange={handleCurrentIndicatorChange}\n          indicators={indicators}\n        />\n      </Container>\n      )}\n      <div style={{ position: 'relative' }}>\n        <Container style={{ paddingTop: 20 }}>\n          <Paper elevation={3} square>\n            <Tabs\n              value={currentTab}\n              onChange={handleTabChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              variant=\"fullWidth\"\n            >\n              <Tab label=\"Карта\" {...getTabProps('map')} />\n              <Tab label=\"Диаграмма\" {...getTabProps('diagramm')} />\n              <Tab label=\"Рейтинг\" {...getTabProps('rating')} />\n              <Tab label=\"Исходные данные\" {...getTabProps('source-data')} />\n              <Tab label=\"Столбчатая карта\" {...getTabProps('bar-map')} />\n            </Tabs>\n            {\n          isLoading ? (<LinearProgress />)\n            : (\n              <>\n                <TabPanel value={currentTab} index=\"map\">\n                  <MapTab\n                    currentIndicator={currentIndicator}\n                    years={years}\n                    indicators={indicators}\n                  />\n                </TabPanel>\n                <TabPanel value={currentTab} index=\"diagramm\">\n                  <DiagramsTab\n                    currentIndicator={currentIndicator}\n                    years={years}\n                    regions={regions}\n                  />\n                </TabPanel>\n                <TabPanel value={currentTab} index=\"rating\">\n                  <FormControl component=\"fieldset\" fullWidth>\n                    <FormLabel component=\"legend\">Рейтинг по</FormLabel>\n                    <RadioGroup\n                      aria-label=\"rating-type\"\n                      name=\"rating-type\"\n                      value={selectedRatingType}\n                      onChange={handleRatingType}\n                      style={{ flexDirection: 'row' }}\n                    >\n                      <FormControlLabel value=\"region\" control={<Radio />} label=\"Региону\" />\n                      <FormControlLabel value=\"indicator\" control={<Radio />} label=\"Индикатору\" />\n                    </RadioGroup>\n                  </FormControl>\n                  {\n                    selectedRatingType === 'indicator'\n                      ? (<IndicatorRating years={years} indicators={indicators} />) : (\n                        <RegionRating years={years} regions={regions} />\n                      )\n                  }\n                </TabPanel>\n                <TabPanel value={currentTab} index=\"source-data\">\n                  <TableTab\n                    currentIndicator={currentIndicator}\n                    statistic={statistic}\n                    years={years}\n                    regions={regions}\n                  />\n                </TabPanel>\n                <TabPanel value={currentTab} index=\"bar-map\">\n                  <MapTab\n                    currentIndicator={currentIndicator}\n                    years={years}\n                    indicators={indicators}\n                    isBar\n                  />\n                </TabPanel>\n              </>\n            )\n          }\n          </Paper>\n        </Container>\n      </div>\n    </Box>\n  );\n}\n\nexport default connect(\n  (state) => {\n    return {\n      indicators: state.indicators.indicators,\n      categories: state.categories.categories,\n      statistic: state.statistic.statistic,\n      years: state.statistic.years.map((el) => parseInt(el.year)),\n      regions: state.statistic.regions,\n      isLoading: state.loading.isLoading,\n    };\n  },\n  {\n    getIndicators,\n    getCategories,\n    getStatisticByIndicator,\n  },\n)(App);\n","import { GET_CATEGORIES } from '../constants/categories';\nimport config from '../config/server';\nimport { handleError } from './alertAction';\nimport { handleLoadingFinished, handleLoadingStarted } from './loadingAction';\n\nexport const getCategories = () => async dispatch => {\n  try {\n    handleLoadingStarted();\n    const response = await fetch(`${config.protocol}://${config.server}:${config.port}/api/categories`, {\n      method: 'get',\n      headers: {\n        Authorization: localStorage.getItem('token'),\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    });\n\n    const json = await response.json();\n\n    if (json.error) {\n      throw new Error(json.message);\n    }\n    dispatch({\n      type: GET_CATEGORIES,\n      payload: {\n        items: json.items,\n      },\n    });\n    // dispatch({\n    //   type: OPEN_ALERT,\n    //   payload: {\n    //     message: { text: \"Пользователь успешно создан.\", type: \"success\" }\n    //   }\n    // });\n  } catch (err) {\n    handleError(dispatch, err);\n  } finally {\n    handleLoadingFinished();\n  }\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport { closeAlert } from '../actions/alertAction';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nclass AlertContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClose(event, reason) {\n    if (reason === 'clickaway' || !this.props.alert.setAlertOpen) {\n      return;\n    }\n    this.props.closeAlert();\n  }\n\n  render() {\n    return (\n      <Snackbar\n        open={this.props.alert.setAlertOpen}\n        autoHideDuration={6000}\n        onClose={this.handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n      >\n        <Alert\n          onClose={this.handleClose}\n          severity={this.props.alert.message.type}\n        >\n          {this.props.alert.message.text}\n        </Alert>\n      </Snackbar>\n    );\n  }\n}\nconst mapStateToProps = (store) => {\n  return {\n    alert: store.alert,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    closeAlert: () => dispatch(closeAlert()),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertContainer);\n","import {\n  colors,\n} from '@material-ui/core';\n\nconst white = '#FFFFFF';\n\nexport default {\n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100],\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue.A700,\n    light: colors.blue.A400,\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400],\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600],\n  },\n  link: colors.blue[800],\n  icon: colors.blueGrey[600],\n  background: {\n    default: '#F4F6F8',\n    paper: white,\n  },\n  divider: colors.grey[200],\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px',\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px',\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px',\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px',\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px',\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px',\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px',\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px',\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px',\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px',\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px',\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase',\n  },\n};\n","import {\n  createMuiTheme,\n} from '@material-ui/core';\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst baseTheme = {\n  palette,\n  typography,\n  overrides,\n};\n\nconst theme = createMuiTheme(baseTheme);\nexport default theme;\n","import MuiButton from './MuiButton';\nimport MuiCardActions from './MuiCardActions';\nimport MuiCardContent from './MuiCardContent';\nimport MuiCardHeader from './MuiCardHeader';\nimport MuiChip from './MuiChip';\nimport MuiIconButton from './MuiIconButton';\nimport MuiInputBase from './MuiInputBase';\nimport MuiLinearProgress from './MuiLinearProgress';\nimport MuiListItem from './MuiListItem';\nimport MuiListItemIcon from './MuiListItemIcon';\nimport MuiOutlinedInput from './MuiOutlinedInput';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTableRow from './MuiTableRow';\nimport MuiToggleButton from './MuiToggleButton';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiCardActions,\n  MuiCardContent,\n  MuiCardHeader,\n  MuiChip,\n  MuiIconButton,\n  MuiInputBase,\n  MuiLinearProgress,\n  MuiListItem,\n  MuiListItemIcon,\n  MuiOutlinedInput,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTableRow,\n  MuiToggleButton,\n  MuiTypography,\n};\n","import {\n  colors,\n} from '@material-ui/core';\n\nexport default {\n  contained: {\n    boxShadow: '0 1px 1px 0 rgba(0,0,0,0.14)',\n    backgroundColor: colors.grey[100],\n    '&:hover': {\n      backgroundColor: colors.grey[300],\n    },\n  },\n};\n","export default {\n  root: {\n    padding: '16px 24px',\n  },\n};\n","export default {\n  root: {\n    padding: 24,\n  },\n};\n","export default {\n  root: {\n    padding: '16px 24px',\n  },\n};\n","import {\n  colors,\n} from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.blueGrey[50],\n    color: colors.blueGrey[900],\n  },\n  deletable: {\n    '&:focus': {\n      backgroundColor: colors.blueGrey[100],\n    },\n  },\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)',\n    },\n  },\n};\n","import palette from '../palette';\n\nexport default {\n  root: {},\n  input: {\n    '&::placeholder': {\n      opacity: 1,\n      color: palette.text.secondary,\n    },\n  },\n};\n","import {\n  colors,\n} from '@material-ui/core';\n\nexport default {\n  root: {\n    borderRadius: 3,\n    overflow: 'hidden',\n  },\n  colorPrimary: {\n    backgroundColor: colors.blueGrey[50],\n  },\n};\n","export default {\n  button: {\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.04)',\n    },\n  },\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    minWidth: 32,\n  },\n};\n","export default {\n  root: {},\n  notchedOutline: {\n    borderColor: 'rgba(0,0,0,0.15)',\n  },\n};\n","export default {\n  root: {},\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)',\n  },\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`,\n  },\n};\n","import {\n  colors,\n} from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50],\n  },\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    '&$selected': {\n      backgroundColor: palette.background.default,\n    },\n    '&$hover': {\n      '&:hover': {\n        backgroundColor: palette.background.default,\n      },\n    },\n  },\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(208, 208, 208, 0.20)',\n    },\n    '&$selected': {\n      backgroundColor: 'rgba(208, 208, 208, 0.20)',\n      color: palette.primary.main,\n      '&:hover': {\n        backgroundColor: 'rgba(208, 208, 208, 0.30)',\n      },\n    },\n    '&:first-child': {\n      borderTopLeftRadius: 4,\n      borderBottomLeftRadius: 4,\n    },\n    '&:last-child': {\n      borderTopRightRadius: 4,\n      borderBottomRightRadius: 4,\n    },\n  },\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8,\n  },\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Link as RouterLink } from 'react-router-dom';\n\nimport {\n  Typography,\n  Toolbar,\n  AppBar,\n  Grid,\n  Hidden,\n  Drawer,\n  List,\n  Divider,\n  ListSubheader,\n} from '@material-ui/core';\nimport { white } from 'material-ui/styles/colors';\n\nclass TopAppBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      driverIsOpen: false,\n    };\n  }\n\n  signOut = () => {\n  }\n\n  render() {\n    const { driverIsOpen } = this.state;\n    return (\n      <AppBar position=\"static\" style={{ marginBottom: '20px' }}>\n        <Toolbar>\n          <Grid container direction=\"row\" alignItems=\"flex-end\" justify=\"space-between\" spacing={1}>\n            <Grid item>\n              <Grid container direction=\"row\" alignItems=\"center\" justify=\"flex-start\" spacing={1}>\n                <Hidden xsDown>\n                  <Grid item>\n                    <RouterLink to=\"/\">\n                      <Typography variant=\"h2\" style={{ color: white }}>Платформа для отображения данных</Typography>\n                    </RouterLink>\n                  </Grid>\n                </Hidden>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Toolbar>\n        <Drawer\n          anchor=\"left\"\n          open={driverIsOpen}\n          onClose={() => this.setState({ driverIsOpen: false })}\n        >\n\n          <Divider />\n          <List\n            onClick={() => this.setState({ driverIsOpen: false })}\n            subheader={(\n              <ListSubheader>\n                Платформа для отображения данных\n              </ListSubheader>\n            )}\n          />\n          {/* <ListItem button component={RouterLink} to=\"/\">\n              <ListItemIcon>\n                <ListRoundedIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Список проектов\" />\n            </ListItem> */}\n        </Drawer>\n      </AppBar>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  (state) => ({\n  }),\n  (dispatch) => ({\n  }),\n)(TopAppBar));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom';\nimport {\n  ThemeProvider,\n} from '@material-ui/styles';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './containers/App';\nimport AlertContainer from './containers/AlertContainer';\nimport theme from './theme';\nimport './index.css';\nimport TopAppBar from './containers/TopAppBar';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <Router>\n        <TopAppBar />\n        <App />\n        <AlertContainer />\n      </Router>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}